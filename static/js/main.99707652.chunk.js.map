{"version":3,"sources":["AppBar.js","GrommetTheme.js","HoverIcon.js","CompensationCalc/TotalCompensation/CompensationPieChart.js","VictoryTheme.js","CompensationCalc/math/convertToHours.js","CompensationCalc/math/insuranceValue.js","CompensationCalc/compensationSlice.js","CompensationCalc/math/equivalentWage.js","CompensationCalc/math/workingDays.js","CompensationCalc/math/paidTimeOffValue.js","CompensationCalc/math/bonusValue.js","CompensationCalc/math/retirementValue.js","CompensationCalc/math/savingsAccountsValue.js","CompensationCalc/math/fringeValue.js","CompensationCalc/math/benefitsTotal.js","CompensationCalc/TotalCompensation/YearlyCompensationChart.js","CompensationCalc/TotalCompensation/BenefitBreakdownChart.js","CompensationCalc/TotalCompensation/NoCompensation.js","CompensationCalc/TotalCompensation/TotalHeadline.js","CompensationCalc/TotalCompensation/TotalCompensation.js","functions/setWithinRange.js","CompensationCalc/BaseWage.js","CompensationCalc/Holidays.js","CompensationCalc/PaidTimeOff.js","CompensationCalc/Bonus.js","CompensationCalc/Retirement.js","CompensationCalc/Vesting.js","CompensationCalc/Insurance.js","CompensationCalc/HealthSavingsAccounts.js","CompensationCalc/FringeBenefits.js","SelectWithSearch.js","CompensationCalc/SupplimentalInsurance.js","CalendarDropButton.js","CompensationCalc/WhoWhatWhen.js","CompensationCalc/compensationForm.js","CompensationCalc/CompensationCalc.js","reducers/jobSlice.js","CompensationCalc/EditCompesation.js","EditableList.js","data/submitted.js","data/applied.js","JobLink.js","RankedView.js","Body.js","SideBar.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["AppBar","props","Box","tag","direction","align","justify","background","pad","left","right","vertical","style","zIndex","Heading","level","margin","ThemeColors","customTheme","global","colors","brand","brand40","focus","text","dark","font","family","size","height","select","icons","color","tab","border","GrommetTheme","_","base","HoverIcon","icon","label","active","activeColor","inactiveColor","boxProps","useState","hover","setHover","onMouseEnter","onMouseLeave","Text","undefined","CompensationPieChart","baseSalary","benefitsTotal","key","amount","name","map","item","gap","alignSelf","Math","round","flex","Meter","type","thickness","values","value","baseProps","padding","baseLabelStyles","fontFamily","fontSize","letterSpacing","fill","stroke","strokeWidth","centeredLabelStyles","assign","textAnchor","VictoryTheme","area","data","labels","axis","axisLabel","grid","ticks","tickLabels","bar","width","boxplot","max","maxLabels","median","medianLabels","min","minLabels","q1","q1Labels","q3","q3Labels","boxWidth","candlestick","candleColors","positive","negative","chart","errorbar","borderWidth","opacity","group","colorScale","legend","gutter","orientation","titleOrientation","title","line","pie","scatter","stack","tooltip","pointerEvents","flyoutStyle","cornerRadius","pointerLength","voronoi","flyout","convertToHours","daysOrHours","hoursInADay","insuranceValue","insurance","reduce","total","yours","theirs","initialState","id","nanoid","baseWage","basics","daysInAWeek","weeksInAYear","holidays","opportunity","company","position","startDate","pto","vacation","vacationType","sick","sickType","personal","personalType","bonus","signOn","cyclicalBonus","frequency","eligibility","retirement","contribution","match","profitSharingPercent","stockOptionsPercent","vesting","years","schedule","savingsAccounts","hsa","fsa","supplimentalInsurance","Date","now","fringeBenefits","compensationSlice","createSlice","reducers","resetCompensation","loadCompensation","state","action","payload","setBaseWage","reducer","setHolidays","setCompanyName","setPositionTitle","setStartDate","setPto","setSignOnAmount","setCyclicalAmount","setCyclicalType","setCyclicalFrequency","setCyclicalEligibility","setRetirementContribution","setRetirementMatch","setProfitSharingPercent","setStockOptionsPercent","setVesting","setInsurance","setSavingsAccounts","setSupplimentalInsurance","setFringeBenefits","selectBasics","selectPto","selectEquivalentWage","createSelector","hoursInAYear","holidayHours","ptoHours","salary","hourly","equivalentWage","selectEquivalentHourlyWage","wage","selectEquivalentSalary","selectWorkingDays","startOfYear","moment","startOf","endOfYear","endOf","add","year","business","weekDays","partial","workingDays","selectPaidTimeOffValue","hourlyWage","equivalentHourlyWage","paidTimeOffValue","selectBonusValue","equivalentSalary","dollars","bonusValue","selectRetirementValue","retirementAmount","percent","i","a","arr","fullyVested","retirementValue","selectInsuranceValue","selectSavingsAccountsValue","savings","selectSupplimentalInsuranceValue","supplimental","selectFringeBenefitsValue","selectItemizedBenefitsValue","fringe","selectBenefitsCompensation","itemizedValue","benefit","selectTotalCompensation","actions","YearlyCompensationChartStateful","connect","compensation","allBenefits","format","partialYearAdj","notVestingBenefits","vestingBenefit","find","b","push","vested","yearlyBaseSalary","d","x","y","benefits","length","selectedYear","setSelectedYear","hoverYear","setHoverYear","barStyling","datum","tick","fontWeight","theme","domainPadding","events","childName","target","eventHandlers","onMouseOver","e","index","onMouseOut","onClick","tickValues","tickFormat","dependentAxis","BenefitBreakdownChart","DataTable","columns","property","header","primary","render","filter","NoCompensation","bottom","TotalHeadline","headline","TotalCompensationStateful","simpleTotal","setNumberWithinRange","low","high","set","setIntegerWithinRange","wageTypes","BaseWageStateful","onChange","animation","FormField","TextInput","event","Select","options","labelKey","valueKey","w","option","HolidaysStateful","holidayChange","capitalize","charAt","toUpperCase","slice","PaidTimeOffStateful","ptoItem","upperBound","v","handleChange","toLowerCase","frequencies","eligibilities","BonusStateful","onSignOnChange","onCyclicalAmountChange","onCyclicalTypeChange","onCyclicalFrequencyChange","onCyclicalEligibilityChange","plain","f","RetirementStateful","onRetirementContributionChange","onRetirementMatchChange","onProfitSharingPercentChange","onStockOptionsPercentChange","VestingStateful","setSchedule","InsuranceStateful","updateInsurance","update","findIndex","newInsurance","splice","HealthSavingsAccountsStateful","newItem","FringeBenefitsStateful","list","setList","l","updateItem","newList","horizontal","Button","FormTrash","remove","FormAdd","prefix","SelectWithSearch","setOptions","setValue","searchValue","setSearchValue","searchRegEx","setSearchRegEx","placeholder","o","test","selection","includes","trim","onClose","onSearch","len","newOptions","startsWith","updateCreateOption","escapedText","replace","RegExp","getRegExp","supplimentalTypes","SupplimentalInsuranceStateful","CalendarDropButton","innerAlignment","React","date","setDate","open","setOpen","DropButton","onOpen","dropContent","Calendar","onSelect","selectedDate","top","weight","FormDown","WhoWhatWhenStateful","onCompanyChange","onPositionChange","onStartDateChange","compensationForm","Currency","content","IceCream","Money","LineChart","Aed","Trigger","Train","CompensationCalc","onSave","setIndex","Tabs","activeIndex","onActive","Tab","overflow","FormPrevious","disabled","to","Checkmark","FormNext","reverse","jobsSlice","addJob","deleteJob","newState","loadJobs","saveJob","EditCompensation","jobs","useParams","useEffect","job","_id","findJob","EditableList","List","primaryKey","secondaryKey","Add","toggleSidebar","submitted","recuriter","email","recruiter","applied","jobTitle","inactive","reason","JobLink","onDelete","onCompare","textDecoration","Layer","cursor","transform","visibility","Trash","RankedView","rows","setRows","r","Body","jobLinks","setJobLinks","newJob","AddCircle","sortedJobs","sort","savedJobs","JSON","parse","localStorage","getItem","setItem","stringify","path","SideBar","ResponsiveContext","Consumer","Collapsible","elevation","children","FormClose","App","showSidebar","setShowSidebar","StrictMode","Grommet","full","image","repeat","combineReducers","Boolean","window","location","hostname","store","configureStore","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sNAGaA,EAAS,SAACC,GAAD,OACpB,cAACC,EAAA,EAAD,yBACEC,IAAI,SACJC,UAAU,MACVC,MAAM,SACNC,QAAQ,UACRC,WAAW,UACXC,IAAK,CAAEC,KAAM,SAAUC,MAAO,QAASC,SAAU,SACjDC,MAAO,CAAEC,OAAQ,MACbZ,GARN,aAUE,cAACa,EAAA,EAAD,CAASC,MAAM,IAAIC,OAAO,OAA1B,iC,yHCRSC,EAEJ,UAFIA,EAGC,UAHDA,EAIM,UAJNA,EAKL,UAKFC,EAAc,CAClBC,OAAQ,CACNC,OAAQ,CAENC,MAAOJ,EACPK,QAAS,YACTC,MAAO,QACP,WAAYN,EACZ,WAAYA,EACZO,KAAM,CACJC,KAAMR,IAGVS,KAAM,CACJC,OAAQ,SACRC,KAAM,OACNC,OAAQ,SAGZC,OAAQ,CACNC,MAAO,CACLC,MAAOf,IAGXgB,IAAK,CACHD,MAAOf,EACPiB,OAAQ,CACNF,MAAO,CACLP,KAAMR,MAMDkB,EAAeC,eAAelB,EAAamB,Q,0DC5C3CC,EAAY,SAAC,GAOnB,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,MACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,cACGC,EACC,iBACJ,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAKA,OAHAL,EAAcA,GAAeP,EAAaF,IAAIQ,OAAOT,MACrDW,EAAgBA,GAAiBJ,EAAKtC,MAAM+B,OAASG,EAAaF,IAAID,MAGpE,eAAC9B,EAAA,EAAD,yBACEE,UAAU,SACVC,MAAM,SACN2C,aAAe,kBAAMD,GAAS,IAC9BE,aAAe,kBAAMF,GAAS,KACzBH,GALP,yCAQOL,GARP,IASItC,MAAM,2BACDsC,EAAKtC,OADL,IAEH+B,MAAOS,GAAUK,EAAQJ,EAAcC,MAGzCH,EACA,cAACU,EAAA,EAAD,CACElB,MAAQS,GAAUK,EAAQJ,EAAcC,EAD1C,SAGIH,SAEFW,O,SCpCGC,EAAuB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAC3CC,EAAM,CAAC,CACXC,OAAQH,EACRrB,MAAO,QACPyB,KAAM,eACL,CACDD,OAAQF,EACRtB,MAAO,WACPyB,KAAM,aACLC,KAAK,SAAAC,GAAI,OACV,eAACzD,EAAA,EAAD,CACEE,UAAU,MACVE,QAAQ,UACRsD,IAAI,QAHN,UAME,cAAC9C,EAAA,EAAD,CACEC,MAAM,IACNiB,MAAQ2B,EAAK3B,MACbhB,OAAO,OAHT,SAKI2C,EAAKF,OAET,cAAC3C,EAAA,EAAD,CACEC,MAAM,IACNiB,MAAQ2B,EAAK3B,MACbhB,OAAO,OACP6C,UAAU,MAJZ,SAMIC,KAAKC,MAAMJ,EAAKH,YAfdG,EAAKF,SAoBf,OACE,eAACvD,EAAA,EAAD,CACEE,UAAU,MACVwD,IAAI,SACJI,MAAM,EAHR,UAKE,cAACC,EAAA,EAAD,CACErC,KAAK,SACLsC,KAAK,SACLC,UAAU,QACVC,OAAQ,CACN,CACEC,MAAOhB,EACPrB,MAAO,SAET,CACEqC,MAAOf,EACPtB,MAAO,eAIb,cAAC9B,EAAA,EAAD,CACEE,UAAU,SACVyD,UAAU,SAFZ,SAIIN,Q,8DCxDJ/B,EAAOP,EACPG,EAAS,CACbH,EACAA,EACAA,EACAO,GAsBI8C,EAAY,CAGhBC,QAAS,IAKEC,EAAkB,CAC7BC,WAhBgB,oDAiBhBC,SAfe,GAgBfC,cAjBoB,SAkBpBJ,QAbc,EAcdK,KAAMpD,EACNqD,OAAQ,cACRC,YAAa,GAGTC,EAAsBC,iBAAO,CAAEC,WAAY,UAAYT,GAQhDU,EAAe,CAC1BC,KAAMH,iBACJ,CACEpE,MAAO,CACLwE,KAAM,CACJR,KAAMpD,GAER6D,OAAQb,IAGZF,GAEFgB,KAAMN,iBACJ,CACEpE,MAAO,CACL0E,KAAM,CACJV,KAAM,cACNC,OAAQ,eAEVU,UAAWP,iBAAO,GAAID,EAAqB,CACzCR,QA/CM,EAgDNM,OAAQ,gBAEVW,KAAM,CACJZ,KAAM,OACNC,OAAQ,eAEVY,MAAO,CACLb,KAAM,cACNC,OAAQ,eAEVa,WAAYV,iBAAO,GAAIR,EAAiB,CACtCI,KAAMpD,MAIZ8C,GAEFqB,IAAKX,iBACH,CACEpE,MAAO,CACLwE,KAAM,CACJR,KAAMpD,EACN+C,QAtEM,EAuENO,YAAa,EACbc,MAAO,IAETP,OAAQb,IAGZF,GAEFuB,QAASb,iBACP,CACEpE,MAAO,CACLkF,IAAK,CAAEvB,QAlFC,EAkFQM,OAAQrD,EAAMsD,YAAa,GAC3CiB,UAAWvB,EACXwB,OAAQ,CAAEzB,QApFF,EAoFWM,OAAQrD,EAAMsD,YAAa,GAC9CmB,aAAczB,EACd0B,IAAK,CAAE3B,QAtFC,EAsFQM,OAAQrD,EAAMsD,YAAa,GAC3CqB,UAAW3B,EACX4B,GAAI,CAAE7B,QAxFE,EAwFOK,KAAMpD,GACrB6E,SAAU7B,EACV8B,GAAI,CAAE/B,QA1FE,EA0FOK,KAAMpD,GACrB+E,SAAU/B,GAEZgC,SAAU,IAEZlC,GAEFmC,YAAazB,iBACX,CACEpE,MAAO,CACLwE,KAAM,CACJP,OAAQrD,GAEV6D,OAAQb,GAEVkC,aAAc,CACZC,SAAU,UACVC,SAAUpF,IAGd8C,GAEFuC,MAAOvC,EACPwC,SAAU9B,iBACR,CACE+B,YAAa,EACbnG,MAAO,CACLwE,KAAM,CACJR,KAAM,cACNoC,QAAS,EACTnC,OAAQrD,EACRsD,YAAa,GAEfO,OAAQb,IAGZF,GAEF2C,MAAOjC,iBACL,CACEkC,WAAY9F,GAEdkD,GAEF6C,OAAQ,CACND,WAAY9F,EACZgG,OAAQ,GACRC,YAAa,WACbC,iBAAkB,MAClB1G,MAAO,CACLwE,KAAM,CACJlB,KAAM,UAERmB,OAAQb,EACR+C,MAAOvC,iBAAO,GAAIR,EAAiB,CAAED,QAAS,MAGlDiD,KAAMxC,iBACJ,CACEpE,MAAO,CACLwE,KAAM,CACJR,KAAM,cACNoC,QAAS,EACTnC,OAAQrD,EACRsD,YAAa,GAEfO,OAAQb,IAGZF,GAEFmD,IAAKzC,iBACH,CACEkC,WAAY9F,EACZR,MAAO,CACLwE,KAAM,CACJb,QAtKM,EAuKNM,OAAQrD,EACRsD,YAAa,GAEfO,OAAQL,iBAAO,GAAIR,EAAiB,CAAED,QAAS,OAGnDD,GAEFoD,QAAS1C,iBACP,CACEpE,MAAO,CACLwE,KAAM,CACJR,KAAMpD,EACNwF,QAAS,EACTnC,OAAQ,cACRC,YAAa,GAEfO,OAAQb,IAGZF,GAEFqD,MAAO3C,iBACL,CACEkC,WAAY9F,GAEdkD,GAEFsD,QAAS,CACPhH,MAAOoE,iBAAO,GAAIR,EAAiB,CAAED,QAAS,EAAGsD,cAAe,SAChEC,YAAa,CACXjD,OAAQrD,EACRsD,YAAa,EACbF,KAAM,UACNiD,cAAe,QAEjBE,aAAc,EACdC,cAAe,IAEjBC,QAASjD,iBACP,CACEpE,MAAO,CACLwE,KAAM,CACJR,KAAM,cACNC,OAAQ,cACRC,YAAa,GAEfO,OAAQL,iBAAO,GAAIR,EAAiB,CAAED,QAAS,EAAGsD,cAAe,SACjEK,OAAQ,CACNrD,OAAQrD,EACRsD,YAAa,EACbF,KAAM,UACNiD,cAAe,UAIrBvD,I,SChQS6D,GAAiB,SAAEC,EAAalE,EAAMmE,GACjD,OAAMD,EAIU,UAATlE,EAAmBkE,EAAcA,EAAcC,EAH7C,G,qBCFEC,GAAiB,SAAEC,GAC9B,MAAO,CACLrE,KAAM,QACNV,OAAQ,GAAK+E,EAAUC,QACrB,SAACC,EAAD,OAAUC,EAAV,EAAUA,MAAV,OAA8BD,IAA9B,EAAiBE,QAAmCD,IACpD,KCON,SAASE,KACP,MAAO,CACLC,GAAIC,cACJC,SAAU,CACR7E,KAAM,SACNV,OAAQ,IAEVwF,OAAQ,CACNX,YAAa,EACbY,YAAa,EACbC,aAAc,GACdC,SAAU,GAEZC,YAAa,CACXC,QAAS,GACTC,SAAU,GACVC,eAAWpG,GAEbqG,IAAK,CACHC,SAAU,GACVC,aAAc,OACdC,KAAM,GACNC,SAAU,OACVC,SAAU,GACVC,aAAc,QAEhBC,MAAO,CACLC,OAAQ,GACRC,cAAe,CACb/F,KAAM,IACNV,OAAQ,GACR0G,UAAW,EACXC,YAAa,aAGjBC,WAAY,CACVC,aAAc,GACdC,MAAO,GACPC,qBAAsB,GACtBC,oBAAqB,IAEvBC,QAAS,CACPvG,KAAM,SACNwG,MAAO,GACPC,SAAU,IAEZpC,UAAW,CAAC,CACRrE,KAAM,SACNwE,MAAO,GACPC,OAAQ,IACT,CACCzE,KAAM,SACNwE,MAAO,GACPC,OAAQ,IACT,CACCzE,KAAM,SACNwE,MAAO,GACPC,OAAQ,KAEZiC,gBAAiB,CACfC,IAAK,GACLC,IAAK,IAEPC,sBAAuB,CAAC,CACtB7G,KAAM,GACNwE,MAAO,GACPC,OAAQ,GACRpF,IAAKyH,KAAKC,QAEZC,eAAgB,CAAC,CACfhH,KAAM,qBACNV,OAAQ,GACRD,IAAKyH,KAAKC,MAAQ,GACjB,CACD/G,KAAM,gBACNV,OAAQ,GACRD,IAAKyH,KAAKC,MAAQ,GACjB,CACD/G,KAAM,iBACNV,OAAQ,GACRD,IAAKyH,KAAKC,MAAQ,KAKxB,IAAME,GAAoBC,YAAY,CACpC3H,KAAM,eACNmF,aAAcA,KACdyC,SAAU,CACRC,kBAAmB,kBAAM1C,MACzB2C,iBAAkB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,SAC5CC,YAAa,CACXC,QADW,SACHJ,EAAOC,GACbD,EAAMzC,SAAW0C,EAAOC,UAI5BG,YAAa,CACXD,QADW,SACHJ,EAAOC,GACbD,EAAMxC,OAAOG,SAAWsC,EAAOC,UAInCI,eAAgB,CACdF,QADc,SACNJ,EAAOC,GACbD,EAAMpC,YAAYC,QAAUoC,EAAOC,UAGvCK,iBAAkB,CAChBH,QADgB,SACRJ,EAAOC,GACbD,EAAMpC,YAAYE,SAAWmC,EAAOC,UAGxCM,aAAc,CACZJ,QADY,SACJJ,EAAOC,GACbD,EAAMpC,YAAYG,UAAYkC,EAAOC,UAGzCO,OAAQ,CACNL,QADM,SACEJ,EAAOC,GACbD,EAAMhC,IAAMiC,EAAOC,UAIvBQ,gBAAiB,CACfN,QADe,SACPJ,EAAOC,GACbD,EAAMzB,MAAMC,OAASyB,EAAOC,UAGhCS,kBAAmB,CACjBP,QADiB,SACTJ,EAAOC,GACbD,EAAMzB,MAAME,cAAczG,OAASiI,EAAOC,UAG9CU,gBAAiB,CACfR,QADe,SACPJ,EAAOC,GACbD,EAAMzB,MAAME,cAAc/F,KAAOuH,EAAOC,UAG5CW,qBAAsB,CACpBT,QADoB,SACZJ,EAAOC,GACbD,EAAMzB,MAAME,cAAcC,UAAYuB,EAAOC,UAGjDY,uBAAwB,CACtBV,QADsB,SACdJ,EAAOC,GACbD,EAAMzB,MAAME,cAAcE,YAAcsB,EAAOC,UAInDa,0BAA2B,CACzBX,QADyB,SACjBJ,EAAOC,GACbD,EAAMpB,WAAWC,aAAeoB,EAAOC,UAG3Cc,mBAAoB,CAClBZ,QADkB,SACVJ,EAAOC,GACbD,EAAMpB,WAAWE,MAAQmB,EAAOC,UAGpCe,wBAAyB,CACvBb,QADuB,SACfJ,EAAOC,GACbD,EAAMpB,WAAWG,qBAAuBkB,EAAOC,UAGnDgB,uBAAwB,CACtBd,QADsB,SACdJ,EAAOC,GACbD,EAAMpB,WAAWI,oBAAsBiB,EAAOC,UAIlDiB,WAAY,CACVf,QADU,SACFJ,EAAOC,GACbD,EAAMf,QAAUgB,EAAOC,UAI3BkB,aAAc,CACZhB,QADY,SACJJ,EAAOC,GACbD,EAAMjD,UAAYkD,EAAOC,UAI7BmB,mBAAoB,CAClBjB,QADkB,SACVJ,EAAOC,GACbD,EAAMZ,gBAAkBa,EAAOC,UAInCoB,yBAA0B,CACxBlB,QADwB,SAChBJ,EAAOC,GACbD,EAAMT,sBAAwBU,EAAOC,UAIzCqB,kBAAmB,CACjBnB,QADiB,SACTJ,EAAOC,GACbD,EAAMN,eAAiBO,EAAOC,aAQzBsB,GAAe,SAAAxB,GAAK,OAAIA,EAAMxC,QAE9BiE,GAAY,SAAAzB,GAAK,OAAIA,EAAMhC,KAS3B0D,GAAuBC,YAClCH,IAb4B,SAAAxB,GAAK,OAAIA,EAAMzC,WAe3CkE,IACA,SAAEjE,EAAQD,EAAUS,GAApB,OCrO4B,SAAER,EAAQD,EAAUS,GAChD,IAAQN,EAAqDF,EAArDE,aAAcD,EAAuCD,EAAvCC,YAAaZ,EAA0BW,EAA1BX,YAAac,EAAaH,EAAbG,SAE9CM,EAMED,EANFC,SACAC,EAKEF,EALFE,aACAC,EAIEH,EAJFG,KACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,aAGIsD,EAAelE,EAAeD,EAAcZ,EAC5CgF,EAAelE,EAAWd,EAE1BiF,EAAWnF,GAAesB,EAAUC,EAAcrB,GACvCF,GAAewB,EAAMC,EAAUvB,GAC/BF,GAAe0B,EAAUC,EAAczB,GAExD,MAAuB,WAAlBU,EAAS7E,KACL,CACLqJ,QAASxE,EAASvF,OAClBgK,OAAQzE,EAASvF,QAAW4J,EAAeC,EAAeC,IAGvD,CACLC,OAAQxE,EAASvF,QAAW4J,EAAeC,GAC3CG,QAASzE,EAASvF,QD2MSiK,CAAgBzE,EAAQD,EAAUS,MAEpDkE,GAA6BP,YACxCD,IACA,SAAAS,GAAI,OAAIA,EAAKH,UAEFI,GAAyBT,YACpCD,IACA,SAAAS,GAAI,OAAIA,EAAKJ,UAGFM,GAAoBV,aAzBA,SAAA3B,GAAK,OAAIA,EAAMpC,eA2B9C,YAAoB,IAAjBG,EAAgB,EAAhBA,UACD,OAAMA,EEnPiB,SAAEA,GAC3B,GAAMA,EAAN,CAIA,IAAMuE,EAAcC,IAAOxE,GAAWyE,QAAQ,QACxCC,EAAYF,IAAOxE,GAAW2E,MAAM,QAAQC,IAAI,EAAG,MAEzD,MAAO,CACLC,KAAMC,KAASC,SAASR,EAAaG,GACrCM,QAASF,KAASC,SAAS/E,EAAW0E,KF0O/BO,CAAaT,IAAOxE,IADF,KAMhBkF,GAAyBtB,YACpCF,GACAS,GACAV,IACA,SAAExD,EAAKkF,EAAP,UG7PA,SAAElF,EAAKmF,EAAsBtG,GAC7B,IAAI7E,EAAS,EAgBb,OAdKgG,EAAIC,WACPjG,GAAU2E,GAAgBqB,EAAIC,SAAUD,EAAIE,aAAcrB,IAGvDmB,EAAIG,OACPnG,GAAU2E,GAAgBqB,EAAIG,KAAMH,EAAII,SAAUvB,IAG/CmB,EAAIK,WACPrG,GAAU2E,GAAgBqB,EAAIK,SAAUL,EAAIM,aAAczB,IAKrD,CACLnE,KAAM,QACNV,OAJFA,GAAUmL,GH8O8BC,CAAkBpF,EAAKkF,EAA/D,EAAqBrG,gBAGVwG,GAAmB1B,aAvCL,SAAA3B,GAAK,OAAIA,EAAMzB,QAyCxC6D,IACA,SAAE7D,EAAOwD,GAAT,OItQwB,SAAExD,EAAO+E,GACjC,IAAItL,EAAS,EAMb,GAJIuG,EAAMC,SACRxG,GAAUuG,EAAMC,QAGbD,EAAME,cAAczG,OAAS,CAChC,IAAIuL,EAAUhF,EAAME,cAAczG,OACA,MAA7BuG,EAAME,cAAc/F,OACvB6K,GAAW,IACXA,GAAWD,GAGbtL,GAAUuL,EAAUhF,EAAME,cAAcC,UAG1C,MAAO,CACLhG,KAAM,QACNV,UJmPmBwL,CAAYjF,EAAOwD,MAG7B0B,GAAwB9B,YACnCS,IA7C8B,SAAApC,GAAK,OAAIA,EAAMpB,cAClB,SAAAoB,GAAK,OAAIA,EAAMf,WA+C1C,SAAE8C,EAAQnD,EAAYK,GAAtB,OK7Q6B,SAAE8C,EAAQnD,EAAYK,GACnD,IACEJ,EAIED,EAJFC,aACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,qBACAC,EACEJ,EADFI,oBAGE0E,EAAmB,EAgBvB,OAdK7E,IACH6E,GAAoB7E,GAEjBC,IACH4E,GAAoB5E,GAEjBC,IACH2E,GAAoB3E,EAAuB,IAAMgD,GAE9C/C,IACH0E,GAAoB1E,EAAsB,IAAM+C,GAI3B,IAAlB9C,EAAQC,MACJ,CACLxG,KAAM,QACNV,OAAQ0L,GAgBL,CACLhL,KAAM,UACNV,OAbAiH,EAAQE,SAASjH,KAAK,SAACyL,EAASC,GAAV,OAEpBF,GAAoBE,EAAI,GAAKD,EAAU,OACvCzL,KAAK,SAAC2L,EAAGD,EAAGE,GAEZ,OAAW,IAANF,EACIC,EAEFA,EAAIC,EAAIF,EAAI,MAMrBG,YAAaL,GL+NoBM,CAAiBjC,EAAQnD,EAAYK,MAG7DgF,GAAuBtC,aAjDL,SAAA3B,GAAK,OAAIA,EAAMjD,aAmD5C,SAAAA,GAAS,OAAID,GAAgBC,MAGlBmH,GAA6BvC,aArDL,SAAA3B,GAAK,OAAIA,EAAMZ,mBAuDlD,SAAA+E,GAAO,MMtRA,CACLzL,KAAM,QACNV,SAHiC,ENuRFmM,GMvRI9E,MAAe,EAAVC,KAAR,IAAC,KN0RxB8E,GAAmCzC,aAzDL,SAAA3B,GAAK,OAAIA,EAAMT,yBA2DxD,SAAA8E,GAAY,OAAIvH,GAAgBuH,MAGrBC,GAA4B3C,aA7DL,SAAA3B,GAAK,OAAIA,EAAMN,kBA+DjD,SAAAA,GAAc,MOhSP,CACLhH,KAAM,QACNV,OAAQ,GP8RqB0H,EO9RT1C,QAClB,SAACC,EAAD,UAAuBA,IAAvB,EAAUjF,SACV,OPgSOuM,GAA8B5C,YACzCsB,GACAI,GACAI,GACAQ,GACAC,GACAE,GACAE,IACA,SAAEtG,EAAKO,EAAOK,EAAY7B,EAAWoH,EAASE,EAAcG,GAA5D,MAAwE,CAAC,CACvEvM,KAAM,gBACNY,MAAOmF,GACN,CACD/F,KAAM,QACNY,MAAO0F,GACN,CACDtG,KAAM,aACNY,MAAO+F,GACN,CAED3G,KAAM,YACNY,MAAO,CACLH,KAAM,QACNV,OAAQ+E,EAAU/E,OAASmM,EAAQnM,SAEpC,CACDC,KAAM,yBACNY,MAAOwL,GACN,CACDpM,KAAM,kBACNY,MAAO2L,OAIEC,GAA6B9C,YACxC4C,IACA,SAAAG,GAAa,OAAmBA,EQtUjB1H,QAAQ,SAACC,EAAO0H,GAC7B,MAA4B,YAAvBA,EAAQ9L,MAAMH,KACVuE,EAAQ0H,EAAQ9L,MAAMkL,YAGxB9G,EAAQ0H,EAAQ9L,MAAMb,SAC5B,MRmUQ4M,GAA0BjD,YACrCS,GACAqC,IACA,SAAE1C,EAAQjK,GAAV,OAA6BiK,EAASjK,KAGjC,GAuBH6H,GAAkBkF,QAtBpB/E,GADK,GACLA,kBACAC,GAFK,GAELA,iBACAI,GAHK,GAGLA,YACAE,GAJK,GAILA,YACAC,GALK,GAKLA,eACAC,GANK,GAMLA,iBACAC,GAPK,GAOLA,aACAC,GARK,GAQLA,OACAC,GATK,GASLA,gBACAC,GAVK,GAULA,kBACAC,GAXK,GAWLA,gBACAC,GAZK,GAYLA,qBACAC,GAbK,GAaLA,uBACAC,GAdK,GAcLA,0BACAC,GAfK,GAeLA,mBACAC,GAhBK,GAgBLA,wBACAC,GAjBK,GAiBLA,uBACAC,GAlBK,GAkBLA,WACAC,GAnBK,GAmBLA,aACAC,GApBK,GAoBLA,mBACAC,GArBK,GAqBLA,yBACAC,GAtBK,GAsBLA,kBAGa5B,MAAf,QSnLamF,GAAkCC,aAC7C,gBAAGC,EAAH,EAAGA,aAAH,MAAuB,CACrBC,YAAaV,GAA6BS,GAC1CnN,WAAYuK,GAAwB4C,GACpCjH,UAAWiH,EAAapH,YAAYG,UACpCiF,YAAaX,GAAmB2C,MALWD,EAnKR,SAAC,GAKjC,IAJLE,EAII,EAJJA,YACApN,EAGI,EAHJA,WACAkG,EAEI,EAFJA,UACAiF,EACI,EADJA,YAEMJ,GAAQL,IAAQxE,GAAYmH,OAAO,QAEnCC,EADyDnC,EAAvDD,QAAuDC,EAA1BJ,KAG/BwC,EACJH,EAAYjI,QAAQ,SAACC,EAAO0H,GAC1B,MAA4B,YAAvBA,EAAQ9L,MAAMH,KACVuE,EAGFA,IAAU0H,EAAQ9L,MAAMb,SAC9B,GAEC4B,EAAO,CAAC,CACZ/B,WAAYA,EAAasN,EACzBR,QAASS,EAAqBD,EAC9BvC,SAGIyC,EACJJ,EAAYK,MACV,SAAAC,GAAC,MAAqB,YAAjBA,EAAE1M,MAAMH,QAGjB,GAAK2M,EAAiB,CACpB,IAAMpG,EACJoG,EAAexM,MAAMb,OAEjB+L,EACJsB,EAAexM,MAAMkL,YAEvBnK,EAAK4L,KAAL,MAAA5L,EAAI,YACE,sBACCqF,GADD,CAEF8E,IACA7L,KAAK,SAAEuN,EAAQ7B,GAAV,MAAkB,CACvB/L,aACA8M,QAASS,EAAqBK,EAC9B7C,KAAMA,EAAO,EAAIgB,aAIrBhK,EAAK4L,KAAK,CACR3N,aACA8M,QAASS,EACTxC,KAAMA,EAAO,IAIjB,IAAM8C,EAAmB9L,EAAK1B,KAAK,SAAAyN,GAAC,MAAK,CAAEC,EAAGD,EAAE/C,KAAMiD,EAAGF,EAAE9N,eACrDiO,EAAWlM,EAAK1B,KAAK,SAAAyN,GAAC,MAAK,CAAEC,EAAGD,EAAE/C,KAAMiD,EAAGF,EAAEhB,YAEnD,EAAwCtN,mBAAUuL,EAAOhJ,EAAKmM,OAAS,GAAvE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkC5O,mBAAS,GAA3C,mBAAO6O,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,CACjBhM,MAAO,YAAgB,IAAbiM,EAAY,EAAZA,MACFjM,EAAQV,EAAaS,IAAI/E,MAAMwE,KAAKQ,MAC1C,OAAIiM,EAAMT,IAAMI,EACC,IAAR5L,EAGFA,GAETf,OAAQ5D,EACR6D,YAAa,YAAgB,IAAb+M,EAAY,EAAZA,MACd,OAAKA,EAAMT,IAAMM,GAAaG,EAAMT,IAAMI,EACjC,EAGF,IAIL9L,EAAa,CACjBhB,SAAU,YAAe,IAAZoN,EAAW,EAAXA,KACX,OAAKA,IAASJ,GAAaI,IAASN,EAC3B,GAGF,IAETO,WAAY,YAAe,IAAZD,EAAW,EAAXA,KACb,OAAKA,IAASJ,GAAaI,IAASN,EAC3B,OAGF,WAIX,OACE,cAACtR,EAAA,EAAD,CAAKE,UAAU,SAAf,SACE,eAAC,IAAD,CACE4R,MAAQ9M,EACRU,MAAQ,IACRqM,cAAe,CACbb,EAAGhM,EAAKmM,OAAS,EAAI,CAAC,GAAI,IAAM,CAAC,IAAK,KACtCF,EAAG,IAELa,OAAQ,CAAC,CACPC,UAAW,CAAC,aAAc,YAC1BC,OAAQ,OACRC,cAAe,CACbC,YAAa,SAACC,EAAGtS,GACf0R,EAAavD,EAAOnO,EAAMuS,QAE5BC,WAAY,WACVd,EAAa,IAEfe,QAAS,SAACH,EAAGtS,GACXwR,EAAgBrD,EAAOnO,EAAMuS,WAlBrC,UAuBE,cAAC,IAAD,CACEG,WAAavN,EAAKmM,OAAS,EAAInM,EAAK1B,KAAK,SAAAyN,GAAC,OAAIA,EAAE/C,aAASjL,EACzDyP,WAAa,SAACxB,GAAD,OAAOA,GACpBxQ,MAAO,CAAE8E,gBAEX,cAAC,IAAD,CACEmN,eAAa,EACbD,WAAa,SAACvB,GAAD,gBAAWA,EAAI,IAAf,QAEf,cAAC,IAAD,CACE7P,KAAK,sBACLyD,WAAW,SACXmM,EAAI,IACJC,EAAI,GACJzQ,MAAK,2BACA4D,GADA,IAEHuN,WAAY,IACZrN,SAAU,WAGd,eAAC,IAAD,WACE,cAAC,IAAD,CACEU,KAAO8L,EACPzN,KAAK,aACL7C,MAAO,CACLwE,KAAMwM,KAGV,cAAC,IAAD,CACExM,KAAOkM,EACP7N,KAAK,WACL7C,MAAO,CACLwE,KAAMwM,gB,0CC1KPkB,GAAwB,SAAC,GAI/B,IAHLxB,EAGI,EAHJA,SACexL,EAEX,EAFJxC,cACGV,EACC,kBACJ,OACE,cAAC1C,EAAA,EAAD,yBACEE,UAAU,UACLwC,GAFP,aAIE,cAACmQ,GAAA,EAAD,CACEC,QAAU,CAAC,CACTC,SAAU,OACVC,OAAQ,UACRC,SAAS,GACR,CACDF,SAAU,QACVC,OAAQ,aACR7S,MAAO,OACN,CACD4S,SAAU,QACVG,OAAQ,SAAAvB,GAAK,OACX,cAAC5N,EAAA,EAAD,CACEG,OAAS,CAAC,2BAAKyN,GAAN,IAAa7P,MAAO,cAC7B8D,IAAMA,EACNlE,KAAK,QACLuC,UAAU,QACV5D,WAAY,CAAEyG,SAAS,QAI7B5B,KACEkM,EAAS+B,QAAQ,SAAAtC,GAAC,MACE,YAAjBA,EAAE1M,MAAMH,MAAsB6M,EAAE1M,MAAMkL,YAAc,GAClDwB,EAAE1M,MAAMb,OAAS,KACnBE,KAAK,SAAAqN,GAAC,kCACJA,GADI,IAEP1M,MAAOP,KAAKC,MACO,UAAjBgN,EAAE1M,MAAMH,KAAmB6M,EAAE1M,MAAMb,OAASuN,EAAE1M,MAAMkL,wBCvCrD+D,GAAiB,kBAC5B,eAACpT,EAAA,EAAD,CAAKG,MAAM,SAAX,UACE,eAACH,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,MACNW,OAAQ,CAAE,SAAY,UAHxB,UAKE,cAACF,EAAA,EAAD,CACEC,MAAM,IACNiB,MAAM,WACNhB,OAAO,IAHT,eAOA,cAACF,EAAA,EAAD,CACEkB,MAAM,WACNhB,OAAO,IAFT,eAMA,cAACF,EAAA,EAAD,CACEC,MAAM,IACNiB,MAAM,WACNhB,OAAO,IAHT,kBAQF,cAACkC,EAAA,EAAD,CAAMlC,OAAQ,CAAGuS,OAAQ,UAAzB,qD,kCCzBSC,GAAgB,SAAC,GAA+C,IAA7CnK,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,SAAUb,EAAyB,EAAzBA,MAAU7F,EAAe,kBAEtE6Q,EAAW,qBASf,OARKpK,GAAWC,EACdmK,EAAQ,UAAMnK,EAAN,cAAoBD,GAClBA,EACVoK,EAAWpK,EACDC,IACVmK,EAAWnK,GAIT,eAACpJ,EAAA,EAAD,2BAAU0C,GAAV,cACE,cAAC9B,EAAA,EAAD,CACEC,MAAM,IACN8C,UAAU,SACV7C,OAAO,OAHT,SAKIyS,IAEFhL,EAAQ,EACR,cAAC3H,EAAA,EAAD,CACEC,MAAM,IACN8C,UAAU,SACV7C,OAAO,OAHT,SAKI,KAAO8C,KAAKC,MAAO0E,KAGvB,cAAC,GAAD,S,0FCgCGiL,GAA4BnD,aACvC,gBAAGC,EAAH,EAAGA,aAAH,MAAuB,CACrBC,YAAaV,GAA6BS,GAC1CnN,WAAYuK,GAAwB4C,GACpClN,cAAe2M,GAA4BO,GAC3CpH,YAAaoH,EAAapH,YAC1BuK,YAAavD,GAAyBI,GACtChC,YAAaX,GAAmB2C,MAPKD,EAlDR,SAAC,GAQ3B,IAPLE,EAOI,EAPJA,YACApN,EAMI,EANJA,WACAC,EAKI,EALJA,cACA8F,EAII,EAJJA,YACAuK,EAGI,EAHJA,YACAnF,EAEI,EAFJA,YACG5L,EACC,kBACJ,OACE,eAAC1C,EAAA,EAAD,yBACEG,MAAM,SACNuD,IAAI,SACChB,GAHP,cAKE,cAAC,GAAD,CAEEyG,QAAUD,EAAYC,QACtBC,SAAWF,EAAYE,SACvBb,MAAQkL,EACR3S,OAAQ,CAAEuS,OAAQ,UAJd,YAMJjQ,EAAgB,EAChB,CACE,cAAC,EAAD,CAEED,WAAaA,EACbC,cAAgBA,GAFZ,OAKN,cAAC,GAAD,CAEEgO,SAAWb,EACXnN,cAAgBA,GAFZ,mBAKNH,EAEFE,EACAmL,EACE,cAAC8B,GAAD,GACM,UAEJ,cAACpN,EAAA,EAAD,6CACFC,S,oGC7DGyQ,GAAuB,SAACC,EAAKC,EAAMzP,EAAO0P,GAChD1P,EAAQwP,EACXxP,EAAQwP,EACExP,EAAQyP,IAClBzP,EAAQyP,GAGVC,GAAK1P,IAGM2P,GAAwB,SAACH,EAAKC,EAAMzP,EAAO0P,GACtD,OAAOH,GAAsBC,EAAKC,EAAMhQ,KAAKC,MAAMM,GAAQ0P,ICHvDE,GAAY,CAAC,CACjBxQ,KAAM,kBACNY,MAAO,UACN,CACDZ,KAAM,SACNY,MAAO,WAwDI6P,GAAmB3D,aAC9B,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAazH,YACtC,CACEoL,SAAUxI,IAHkB4E,EArDR,SAAC,GAA2C,IAAD,IAAxClM,MAASb,EAA+B,EAA/BA,OAAQU,EAAuB,EAAvBA,KAAQiQ,EAAe,EAAfA,SASlD,OACE,eAACjU,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,SACNuD,IAAI,SACJwQ,UAAU,SAJZ,UAME,cAACC,GAAA,EAAD,CACE7R,MAAM,MACNiB,KAAK,WAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,WACLY,MAAQb,EACR2Q,SAtBa,SAAAI,GAAK,OAAIX,GAC5B,EACA,IACAW,EAAMnC,OAAO/N,OACb,SAAAb,GAAM,OAAI2Q,EAAS,CAAEjQ,OAAMV,mBAqBzB,cAAC6Q,GAAA,EAAD,CACE5Q,KAAK,WACLjB,MAAM,OACNoD,MAAM,QAHR,SAKE,cAAC4O,GAAA,EAAD,CACE/Q,KAAK,WACLgR,QAAUR,GAEVS,SAAS,OACTC,SAAS,QACTtQ,MAAQ4P,GAAUnD,MAAM,SAAA8D,GAAC,OAAIA,EAAEvQ,QAAUH,KACzCiQ,SACE,gBAAGU,EAAH,EAAGA,OAAH,OAAgBV,EAAS,CAAE3Q,SAAQU,KAAM2Q,EAAOxQ,UAL9C,iBCVDyQ,GAAmBvE,aAC9B,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAaxH,OAAOG,YAC7C,CACEgL,SAAUtI,IAHkB0E,EAjCR,SAAC,GAAgD,IAAvCpH,EAAsC,EAA7C9E,MAA2BwH,EAAkB,EAA5BsI,SAK1C,OACE,cAACjU,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,SACNuD,IAAI,SACJwQ,UAAU,SAJZ,SAME,cAACC,GAAA,EAAD,CACE7R,MAAM,WACNiB,KAAK,WACLmC,MAAM,QAHR,SAKE,cAAC0O,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,WACLY,MAAQ8E,EACRgL,SAAW,SAAAI,GAAK,OApBF,SAACA,GACrBP,GAAsB,EAAG,IAAKO,EAAMnC,OAAO/N,MAAOwH,GAmBxBkJ,CAAcR,a,SChBtClP,GAAS,CACboE,SAAU,gBACVE,KAAM,YACNE,SAAU,iBAGNmL,GAAa,SAACvR,GAAD,OAAUA,EAAKwR,OAAO,GAAGC,cAAgBzR,EAAK0R,MAAM,IAwE1DC,GAAsB7E,aACjC,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAahH,OACtC,CACE2K,SAAUlI,IAHqBsE,EArER,SAAC,GAAoC,IAA5B/G,EAA2B,EAAlCnF,MAAsB4H,EAAY,EAAtBkI,SAmBjCkB,EAAU,SAAC5R,GAAD,OACd,eAACvD,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SAJZ,UAME,cAACC,GAAA,EAAD,CACE7R,MAAQ6C,GAAO5B,GACfA,KAAOA,EACPmC,MAAM,QAHR,SAKE,cAAC0O,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAOA,EACPY,MAAQmF,EAAI/F,GACZ0Q,SAAW,SAAA5B,GAAC,OAjCC,SAACgC,EAAO9Q,GAC3B,IAAI6R,EAAa,KACW,SAAvB9L,EAAI/F,EAAO,UACd6R,EAAa,KAGf1B,GACE,EACA0B,EACAf,EAAMnC,OAAO/N,OACb,SAAAkR,GAAC,OAAItJ,EAAO,2BACPzC,GADM,mBAER/F,EAAO8R,QAqBUC,CAAajD,EAAG9O,QAGpC,cAAC4Q,GAAA,EAAD,CACE5Q,KAAOA,EAAO,OACdmC,MAAM,OAFR,SAIE,cAAC4O,GAAA,EAAD,CACE/Q,KAAOA,EAAO,OACdgR,QAAS,CAAE,OAAQ,SACnBpQ,MAAQ2Q,GAAWxL,EAAI/F,EAAO,SAC9B0Q,SACE,gBAAEU,EAAF,EAAEA,OAAF,OACE5I,EAAO,2BAAKzC,GAAN,mBAAY/F,EAAO,OAASoR,EAAOY,0BAOrD,OACE,qCACIJ,EAAQ,YACRA,EAAQ,QACRA,EAAQ,kBCnEVK,GAAc,CAAC,CACnBjS,KAAM,WACNY,MAAO,GACN,CACDZ,KAAM,eACNY,MAAO,GACN,CACDZ,KAAM,YACNY,MAAO,GACN,CACDZ,KAAM,UACNY,MAAO,IACN,CACDZ,KAAM,SACNY,MAAO,KAGHsR,GAAgB,CAAC,CACrBlS,KAAM,6BACNY,MAAO,QACN,CACDZ,KAAM,sBACNY,MAAO,YACN,CACDZ,KAAM,qBACNY,MAAO,aA0IIuR,GAAgBrF,aAC3B,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAazG,SACtC,CACE8L,eAAgB3J,GAChB4J,uBAAwB3J,GACxB4J,qBAAsB3J,GACtB4J,0BAA2B3J,GAC3B4J,4BAA6B3J,IAPJiE,EApIR,SAAC,GAOf,IANExG,EAMH,EANJ1F,MACAwR,EAKI,EALJA,eACAC,EAII,EAJJA,uBACAC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,0BACAC,EACI,EADJA,4BAEQjM,EAA0BD,EAA1BC,OAAQC,EAAkBF,EAAlBE,cAoBhB,OACE,qCACE,cAAC/J,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SAJZ,SAME,cAACC,GAAA,EAAD,CACE7R,MAAM,oBACNiB,KAAK,cACLmC,MAAM,QAHR,SAKE,cAAC0O,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,cACLY,MAAQ2F,EACRmK,SAnCgB,SAAAI,GACxBX,GACE,EACA,IACAW,EAAMnC,OAAO/N,MACbwR,UAkCA,cAAC3V,EAAA,EAAD,CAAK2B,OAAO,YACZ,eAAC3B,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SAJZ,UAME,cAACC,GAAA,EAAD,CACE7R,MAAM,QACNiB,KAAK,QACLmC,MAAM,QAHR,SAKE,cAAC0O,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,QACLY,MAAS4F,EAAczG,OACvB2Q,SA9CU,SAAAI,GAClBX,GACE,EACuB,MAAvB3J,EAAc/F,KAAe,IAAM,IACnCqQ,EAAMnC,OAAO/N,MACbyR,QA4CE,cAACzB,GAAA,EAAD,CACE5Q,KAAK,YACLmC,MAAM,OAFR,SAIE,cAAC4O,GAAA,EAAD,CACE/Q,KAAK,YACLgR,QAAS,CAAE,IAAK,KAChByB,OAAQ,EACR7R,MAAQ4F,EAAc/F,KACtBiQ,SAAW,gBAAEU,EAAF,EAAEA,OAAF,OAAckB,EAAsBlB,WAIrD,eAAC3U,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SAJZ,UAME,cAACC,GAAA,EAAD,CACE7R,MAAM,YACNiB,KAAK,YACLmC,MAAM,QAHR,SAKE,cAAC4O,GAAA,EAAD,CACE/Q,KAAK,YACLgR,QAAUiB,GACVhB,SAAS,OACTC,SAAS,QACTtQ,MACEqR,GAAY5E,MAAM,SAAAqF,GAAC,OAAIA,EAAE9R,QAAU4F,EAAcC,aAEnDiK,SAAW,gBAAGU,EAAH,EAAGA,OAAH,OAAgBmB,EAA2BnB,EAAOxQ,YAGjE,cAACgQ,GAAA,EAAD,CACE5Q,KAAK,cACLmC,MAAM,QAFR,SAIE,cAAC4O,GAAA,EAAD,CACE/Q,KAAK,cACLgR,QAAUkB,GACVjB,SAAS,OACTC,SAAS,QACTtQ,MACEsR,GAAc7E,MAAM,SAAAyB,GAAC,OAAIA,EAAElO,QAAU4F,EAAcE,eAErDgK,SAAW,gBAAGU,EAAH,EAAGA,OAAH,OAAgBoB,EAA6BpB,EAAOxQ,qBCpC9D+R,GAAqB7F,aAChC,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAapG,cACtC,CACEiM,+BAAgC9J,GAChC+J,wBAAyB9J,GACzB+J,6BAA8B9J,GAC9B+J,4BAA6B9J,IANC6D,EA/GR,SAAC,GAMpB,IALEnG,EAKH,EALJ/F,MACAgS,EAII,EAJJA,+BACAC,EAGI,EAHJA,wBACAC,EAEI,EAFJA,6BACAC,EACI,EADJA,4BAiCA,MAAO,CACL,eAACtW,EAAA,EAAD,CAEEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SALZ,UAOE,cAACC,GAAA,EAAD,CACE7R,MAAM,4BACNiB,KAAK,yBAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,yBACLY,MAAQ+F,EAAWC,aACnB8J,SA/CwB,SAAEI,GAChCX,GACE,EACA,IACAW,EAAMnC,OAAO/N,MACbgS,QA6CA,cAAChC,GAAA,EAAD,CACE7R,MAAM,qBACNiB,KAAK,kBAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,kBACLY,MAAQ+F,EAAWE,MACnB6J,SAjDkB,SAAEI,GAC1BX,GACE,EACA,IACAW,EAAMnC,OAAO/N,MACbiS,UAmBI,QA8BN,eAACpW,EAAA,EAAD,CAEEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SALZ,UAOE,cAACC,GAAA,EAAD,CACE7R,MAAM,qBACNiB,KAAK,gBAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,gBACLY,MAAQ+F,EAAWG,qBACnB4J,SA5D0B,SAAEI,GAClCX,GACE,EACA,IACAW,EAAMnC,OAAO/N,MACbkS,QA0DA,cAAClC,GAAA,EAAD,CACE7R,MAAM,oBACNiB,KAAK,eAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,eACLY,MAAQ+F,EAAWI,oBACnB2J,SA9DyB,SAAEI,GACjCX,GAAqB,EAAG,IAAKW,EAAMnC,OAAO/N,MAAOmS,UAoC3C,aCUGC,GAAkBlG,aAC7B,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAa/F,WACtC,CACE0J,SAAUxH,IAHiB4D,EApFR,SAAC,GAAkC,IAAzB9F,EAAwB,EAA/BpG,MAAgB8P,EAAe,EAAfA,SAYlCuC,EAAc,SAAExS,EAAMwG,GAC1B,IAAMC,EAAW,GACjB,GAAc,WAATzG,EAEH,IADA,IAAMV,EAAS,IAAMkH,EACX0E,EAAI,EAAGA,EAAI1E,IAAU0E,EAC7BzE,EAASqG,KAAMxN,GAAU4L,EAAI,IAGjC+E,EAAS,CACPjQ,OACAwG,QACAC,cAgBJ,OACE,eAACzK,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SAJZ,UAME,cAACC,GAAA,EAAD,CACE7R,MAAM,gBACNiB,KAAK,eAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,eACLY,MAAQoG,EAAQC,MAChByJ,SAAW,SAAAI,GAAK,OAvBG7J,EAuBkB6J,EAAMnC,OAAO/N,WAtBxD2P,GACE,EACA,IACAtJ,GACA,SAAA2G,GAAC,OAAIqF,EAAajM,EAAQvG,KAAMmN,MALX,IAAE3G,YA0CnBvH,QCFGwT,GAAoBpG,aAC/B,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAajI,aACtC,CACE4L,SAAUvH,IAHmB2D,EA1ER,SAAC,GAAoC,IAA3BhI,EAA0B,EAAjClE,MAAkB8P,EAAe,EAAfA,SAGtCyC,EAAkB,SAAE1S,EAAM2S,GAC9B,IAAMrE,EAAQjK,EAAUuO,WAAW,SAAA1H,GAAC,OAAIA,EAAElL,OAASA,KAEnD2S,EAAM,2BACDtO,EAAWiK,IACXqE,GAGL,IAVmBzH,EAUb2H,EAAY,YAAQxO,GAC1BwO,EAAaC,OACXxE,EAAO,EAAGqE,GAZOzH,EAcL2H,EAdU5C,GAAWA,EAAS/E,IAiB9C,OACE,cAAClP,EAAA,EAAD,UACIqI,EAAU7E,KAAK,gBAAGQ,EAAH,EAAGA,KAAMwE,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,OAAhB,OACf,eAACzI,EAAA,EAAD,CAEEE,UAAU,MACVC,MAAM,SACNuD,IAAI,SACJwQ,UAAU,SALZ,UAOE,cAAClU,EAAA,EAAD,CACE0F,MAAM,QADR,SAGE,eAAC9E,EAAA,EAAD,CACEC,MAAM,IADR,UAGImD,EAHJ,kBAMF,cAACmQ,GAAA,EAAD,CACE7R,MAAM,oBACNiB,KAAK,QAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,QACLY,MAAQqE,EACRyL,SACE,SAAAI,GAAK,OAAIqC,EAAgB1S,EAAM,CAAEwE,MAAO6L,EAAMnC,OAAO/N,aAI3D,cAACgQ,GAAA,EAAD,CACE7R,MAAM,wBACNiB,KAAK,SAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,SACLY,MAAQsE,EACRwL,SACE,SAAAI,GAAK,OAAIqC,EAAgB1S,EAAM,CAAEyE,OAAQ4L,EAAMnC,OAAO/N,eArCtDH,WCiCH+S,GAAgC1G,aAC3C,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAa5F,mBACtC,CACEuJ,SAAUtH,IAH+B0D,EAvDR,SAAC,GAG/B,IAAD,IAFJlM,MAASwG,EAEL,EAFKA,IAAKC,EAEV,EAFUA,IACdqJ,EACI,EADJA,SAEA,OACE,eAACjU,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,SACNuD,IAAI,SACJwQ,UAAU,SAJZ,UAME,cAAClU,EAAA,EAAD,CACE0F,MAAM,QADR,SAGE,cAAC9E,EAAA,EAAD,CACEC,MAAM,IADR,yBAMF,cAACsT,GAAA,EAAD,CACE7R,MAAM,4BACNiB,KAAK,MAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,MACLY,MAAQwG,EACRsJ,SACE,SAAA5B,GAAC,OAAI4B,EAAWA,EAAS,CAAEtJ,IAAK0H,EAAEH,OAAO/N,MAAOyG,aAAS3H,OAI/D,cAACkR,GAAA,EAAD,CACE7R,MAAM,4BACNiB,KAAK,MAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,MACLY,MAAQyG,EACRqJ,SACE,SAAA5B,GAAC,OAAI4B,EAAWA,EAAS,CAAErJ,IAAKyH,EAAEH,OAAO/N,MAAOwG,aAAS1H,a,oBCzC/D+T,GAAU,WACd,MAAO,CACLhT,KAAM,GACNV,OAAQ,GACRD,IAAKyH,KAAKC,QA0FDkM,GAAyB5G,aACpC,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAatF,kBACtC,CACEiJ,SAAUpH,IAHwBwD,EAtFR,SAAC,GAA+B,IAAtB6G,EAAqB,EAA5B/S,MAAa8P,EAAe,EAAfA,SACtCkD,EAAU,SAAAC,GAAC,OAAInD,EAAWA,EAASmD,QAAKnU,GAaxCoU,EAAa,SAAEnI,EAAGyH,GACtB,IAAMW,EAAO,YAAQJ,GACrBI,EAAQpI,GAAR,2BAAkBoI,EAAQpI,IAAOyH,GACjCQ,EAASG,IAGX,OACE,eAACtX,EAAA,EAAD,CACEM,IAAK,CACHiX,WAAY,QACZlE,OAAQ,SAHZ,UAMI6D,EAAK1T,KAAK,WAAwB0L,GAAxB,IAAG7L,EAAH,EAAGA,IAAKW,EAAR,EAAQA,KAAMV,EAAd,EAAcA,OAAd,OACV,eAACtD,EAAA,EAAD,CAEEE,UAAU,MACVC,MAAM,SACNuD,IAAI,SACJwQ,UAAU,SALZ,UAOE,cAACC,GAAA,EAAD,CACE7R,MAAM,OACNiB,KAAK,OACLmC,MAAM,QAHR,SAKE,cAAC0O,GAAA,EAAD,CACEpQ,KAAK,OACLT,KAAK,OACLY,MAAQH,EACRiQ,SACE,SAAAI,GAAK,OAAIgD,EAAYnI,EAAG,CAAElL,KAAMqQ,EAAMnC,OAAO/N,aAInD,cAACgQ,GAAA,EAAD,CACE7R,MAAM,iBACNiB,KAAK,SACLmC,MAAM,QAHR,SAKE,cAAC0O,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,SACLY,MAAQb,EACR2Q,SACE,SAAAI,GAAK,OAAIgD,EAAYnI,EAAG,CAAE5L,OAAQ+Q,EAAMnC,OAAO/N,aAIrD,cAACqT,EAAA,EAAD,CACEnV,KAAO,cAACoV,GAAA,EAAD,CAAW3V,MAAM,iBACxB0Q,QAAU,kBA9DL,SAAAtD,GACb,GAAqB,IAAhBgI,EAAK7F,OAAV,CAKA,IAAMiG,EAAO,YAAQJ,GACrBI,EAAQR,OAAQ5H,EAAG,GACnBiI,EAASG,QANPH,EAAQ,CAAEH,OA4DYU,CAAOxI,QApCnB7L,MAwCV,cAACrD,EAAA,EAAD,CACEG,MAAM,MADR,SAGE,cAACqX,EAAA,EAAD,CACEnV,KAAO,cAACsV,GAAA,EAAD,CAAS7V,MAAM,UACtB0Q,QAAU,kBAAM2E,EAAQ,GAAD,mBAAMD,GAAN,CAAYF,mBClFvCY,GAAS,SAcFC,GAAmB,SAAE9X,GAChC,MAA8B4C,mBAAU5C,EAAMwU,SAAW,IAAzD,mBAAOA,EAAP,KAAgBuD,EAAhB,KACA,EAA0BnV,mBAAU5C,EAAMoE,OAAS,IAAnD,mBAAOA,EAAP,KAAc4T,EAAd,KACA,EAAsCpV,mBAAU,IAAhD,mBAAOqV,EAAP,KAAoBC,EAApB,KACA,EAAsCtV,mBAAU,IAAhD,mBAAOuV,EAAP,KAAoBC,EAApB,KAmBA,OACE,cAAC7D,GAAA,EAAD,CACE5S,KAAK,SACL0W,YAAcrY,EAAMqY,YACpBpC,OAAQ,EACR7R,MAAQA,EACRoQ,QACE2D,EAAc3D,EAAQpB,QAAQ,SAAAkF,GAAC,OAAIH,EAAYI,KAAKD,MAAO9D,EAE7DN,SAAU,YAAiB,IAAdU,EAAa,EAAbA,OACP4D,EAAY5D,EACZA,EAAO6D,SAASZ,MAClBW,EAAYP,EAAYS,OACxBX,EAAW,GAAD,mBAAMvD,EAAQU,MAAM,GAAI,IAAxB,CAA4BsD,MAGxCR,EAAUQ,GACLxY,EAAMkU,UACTlU,EAAMkU,SAAUsE,IAGpBG,QAAU,WACRT,EAAgB,IAChBE,EAAgB,KAElBQ,SAAW,SAAArX,IAzCY,SAAAA,GACzB,IAAMsX,EAAMrE,EAAQlD,OAChBwH,EAAatE,EAEZqE,GAAOrE,EAAQqE,EAAM,GAAGE,WAAYlB,MAEvCiB,EAAatE,EAAQU,MAAO,GAAI,IAIhC6C,EADGxW,EACQ,GAAD,mBAAMuX,GAAN,WAAqBjB,GAArB,aAAgCtW,EAAhC,OAEEuX,GA8BVE,CAAoBzX,GACpB6W,EA7DU,SAAA7W,GAGhB,IAAM0X,EAAc1X,EAAK2X,QAAS,uBAAwB,QAK1D,OAAO,IAAIC,OAAQF,EAAa,KAqDVG,CAAU7X,IAC1B2W,EAAgB3W,OChElB8X,GAAoB,CACxB,uBACA,oCACA,iBACA,8BACA,wBACA,2BACA,kDACA,cACA,gBACA,mBACA,qBAGIpC,GAAU,WACd,MAAO,CACLhT,KAAM,GACNwE,MAAO,GACPC,OAAQ,GACRpF,IAAKyH,KAAKC,QAmGDsO,GAAgChJ,aAC3C,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAazF,yBACtC,CACEoJ,SAAUrH,IAH+ByD,EA/FR,SAAC,GAA+B,IAAtB6G,EAAqB,EAA5B/S,MAAa8P,EAAe,EAAfA,SAC7CkD,EAAU,SAAAC,GAAC,OAAInD,EAAWA,EAASmD,QAAKnU,GAaxCoU,EAAa,SAAEnI,EAAGyH,GACtB,IAAMW,EAAO,YAAQJ,GACrBI,EAAQpI,GAAR,2BAAkBoI,EAAQpI,IAAOyH,GACjCQ,EAASG,IAGX,OACE,eAACtX,EAAA,EAAD,CACEM,IAAK,CAAEiX,WAAY,QAASlE,OAAQ,SADtC,UAGI6D,EAAK1T,KAAK,SAACC,EAAMyL,GAAP,OACV,eAAClP,EAAA,EAAD,CACE8D,MAAO,EACP5D,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SALZ,UAQE,cAACC,GAAA,EAAD,CACE5Q,KAAK,OADP,SAGE,cAAC,GAAD,CACEA,KAAK,OACL6U,YAAY,mBACZ7D,QAAU6E,GACVjV,MAAQV,EAAKO,KACbiQ,SAAW,SAAAU,GAAM,OAAI0C,EAAYnI,EAAG,CAAElL,KAAM2Q,SAGhD,cAACR,GAAA,EAAD,CACE7R,MAAM,oBACNiB,KAAK,QAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,QACLY,MAAQV,EAAK+E,MACbyL,SACE,SAAAI,GAAK,OAAIgD,EAAYnI,EAAG,CAAE1G,MAAO6L,EAAMnC,OAAO/N,aAIpD,cAACgQ,GAAA,EAAD,CACE7R,MAAM,wBACNiB,KAAK,SAFP,SAIE,cAAC6Q,GAAA,EAAD,CACEpQ,KAAK,SACLT,KAAK,SACLY,MAAQV,EAAKgF,OACbwL,SACE,SAAAI,GAAK,OAAIgD,EAAYnI,EAAG,CAAEzG,OAAQ4L,EAAMnC,OAAO/N,aAIrD,cAACqT,EAAA,EAAD,CACEnV,KAAO,cAACoV,GAAA,EAAD,CAAW3V,MAAM,iBACxB0Q,QAAU,kBArEL,SAAAtD,GACb,GAAqB,IAAhBgI,EAAK7F,OAAV,CAKA,IAAMiG,EAAO,YAAQJ,GACrBI,EAAQR,OAAQ5H,EAAG,GACnBiI,EAASG,QANPH,EAAQ,CAAEH,OAmEYU,CAAOxI,QAzCnBzL,EAAKJ,QA6Cf,cAACrD,EAAA,EAAD,CACEkU,UAAU,SACV/T,MAAM,MAFR,SAKE,cAACqX,EAAA,EAAD,CACEnV,KAAO,cAACsV,GAAA,EAAD,CAAS7V,MAAM,UACtB0Q,QAAU,kBAAM2E,EAAQ,GAAD,mBAAMD,GAAN,CAAYF,YAJjC,gB,8BCzGCsC,GAAqB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,eAAgBtF,EAAsB,EAAtBA,SAAU9P,EAAY,EAAZA,MAG7D,EAAwBqV,IAAM7W,SAAUwB,GAAxC,mBAAOsV,EAAP,KAAaC,EAAb,KACA,EAAwBF,IAAM7W,WAA9B,mBAAOgX,EAAP,KAAaC,EAAb,KAaA,OACI,cAAC5Z,EAAA,EAAD,CACEgC,OAAQ,CAAEF,MAAO,cAAeJ,KAAM,OADxC,SAGE,cAACmY,GAAA,EAAD,CACEF,KAAOA,EACPjB,QAAU,kBAAMkB,GAAS,IACzBE,OAAS,kBAAMF,GAAS,IACxBG,YACE,cAACC,GAAA,EAAD,CACEP,KACEA,EACIA,EAAKjJ,SACL3C,MAASC,QAAQ,OAAO0C,SAE9ByJ,SA1BK,SAAAC,GACf,IAAMT,EAAO5L,IAAOqM,GACpBR,EAASD,GAEJxF,GACHA,EAAUwF,GAGZG,GAAS,MAOL,SAeE,eAAC5Z,EAAA,EAAD,CACEE,UAAU,MACVwD,IAAI,SACJvD,MAAM,SACNG,IAAMiZ,GAAkB,CACtBY,IAAK,OACL9G,OAAQ,MACR9S,KAAM,OACNC,MAAO,QAETJ,QAAQ,UAVV,UAYE,cAAC4C,EAAA,EAAD,CACEoX,OAAO,OADT,SAGIX,EAAOA,EAAKjJ,OAAO,MAAQ,gBAE/B,cAAC6J,GAAA,EAAD,CACEvY,MAAM,iBCIPwY,GAAsBjK,aACjC,SAAA/E,GAAK,MAAK,CAAEnH,MAAOmH,EAAMgF,aAAapH,eACtC,CACEqR,gBAAiB3O,GACjB4O,iBAAkB3O,GAClB4O,kBAAmB3O,IALYuE,EAvDR,SAAC,GAKrB,IAJEnH,EAIH,EAJJ/E,MACAoW,EAGI,EAHJA,gBACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,kBAEQtR,EAAiCD,EAAjCC,QAASC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,UAE3B,OACE,eAACrJ,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,MACNuD,IAAI,SACJwQ,UAAU,SAJZ,UAME,cAACC,GAAA,EAAD,CACE7R,MAAM,UACNiB,KAAK,UAFP,SAIE,cAAC6Q,GAAA,EAAD,CACE7Q,KAAK,UACLY,MAAQgF,EACR8K,SAAW,SAAAI,GAAK,OAAIkG,EAAgBlG,EAAMnC,OAAO/N,YAGrD,cAACgQ,GAAA,EAAD,CACE7R,MAAM,mBACNiB,KAAK,WACLmC,MAAM,QAHR,SAKE,cAAC0O,GAAA,EAAD,CACE7Q,KAAK,WACLY,MAAQiF,EACR6K,SAAW,SAAAI,GAAK,OAAImG,EAAiBnG,EAAMnC,OAAO/N,YAGtD,cAACgQ,GAAA,EAAD,CACE7R,MAAM,uBADR,SAGE,cAAC,GAAD,CACE6B,MAAQkF,EAAYwE,IAAOxE,QAAapG,EACxCgR,SAAW,SAAA5K,GAAS,OAAIoR,EAAkBpR,EAAUmH,qBC1BjDkK,GAAmB,CAAC,CAC/BrT,MAAO,SACPhF,KAAM,cAACsY,GAAA,EAAD,IACNC,QAAS,qCACP,cAACN,GAAD,IACA,cAACtG,GAAD,QAED,CACD3M,MAAO,gBACPhF,KAAM,cAACwY,GAAA,EAAD,IACND,QAAS,qCACP,cAAChG,GAAD,IACA,cAACM,GAAD,QAED,CACD7N,MAAO,QACPhF,KAAM,cAACyY,GAAA,EAAD,IACNF,QAAS,mCACP,cAAClF,GAAD,OAED,CACDrO,MAAO,aACPhF,KAAM,cAAC0Y,GAAA,EAAD,IACNH,QAAS,qCACP,cAAC1E,GAAD,IACA,cAACK,GAAD,QAED,CACDlP,MAAO,YACPhF,KAAM,cAAC2Y,GAAA,EAAD,IACNJ,QAAS,qCACP,cAACnE,GAAD,IACA,cAACzW,EAAA,EAAD,CAAK2B,OAAO,YACZ,cAACoV,GAAD,QAED,CACD1P,MAAO,eACPhF,KAAM,cAAC4Y,GAAA,EAAD,IACNL,QAAS,mCACP,cAACvB,GAAD,OAED,CACDhS,MAAO,kBACPhF,KAAM,cAAC6Y,GAAA,EAAD,IACNN,QAAS,mCACP,cAAC3D,GAAD,QC5DSkE,GAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjC,EAA0B5B,IAAM7W,SAAS,GAAzC,mBAAO2P,EAAP,KAAc+I,EAAd,KAEA,OACA,eAACrb,EAAA,EAAD,CACEE,UAAU,MACVC,MAAM,SACNC,QAAQ,SAHV,UAKE,cAACJ,EAAA,EAAD,CACEG,MAAM,SACNC,QAAQ,SACRsF,MAAM,yBACN1D,OAAO,QAJT,SAME,cAACsZ,EAAA,EAAD,CAAMC,YAAcjJ,EAAQkJ,SAAW,SAAAtM,GAAC,OAAImM,EAASnM,IAArD,SACIwL,GAAiBlX,KAAK,WAA2B0L,GAA3B,IAAG7H,EAAH,EAAGA,MAAOhF,EAAV,EAAUA,KAAMuY,EAAhB,EAAgBA,QAAhB,OACpB,cAACa,EAAA,EAAD,CAEEpU,MACE,cAAC,EAAD,CACEhF,KAAOA,EACPE,OAAS+P,IAAUpD,IALzB,SASE,eAAClP,EAAA,EAAD,CACE8D,MAAM,EACN3D,MAAM,SACNC,QAAQ,SACRU,OAAQ,CAAEL,SAAU,UAJtB,UAME,cAACG,EAAA,EAAD,CACEC,MAAM,IACNC,OAAQ,CAAEqZ,IAAK,KAFjB,SAII9S,IAEJ,cAACrH,EAAA,EAAD,CACE8D,MAAM,EACNnC,OAAQ,CAAEiE,IAAK,QACf8V,SAAU,CAAEjb,SAAU,QAHxB,SAKIma,IAEJ,eAAC5a,EAAA,EAAD,CACE8D,MAAM,EACN5D,UAAU,MACVwD,IAAI,SACJvD,MAAM,SACNW,OAAQ,CAAEqZ,IAAK,UALjB,UAOE,cAAC3C,EAAA,EAAD,CACE1V,MAAM,QACNQ,MAAM,OACND,KAAO,cAACsZ,EAAA,EAAD,IACPnJ,QAAU,kBAAM6I,EAAS/I,EAAQ,IACjCsJ,SAAqB,IAAVtJ,IAEb,cAAC,IAAD,CAAMuJ,GAAG,IAAIrJ,QAAU,kBAAM4I,KAA7B,SACE,cAAC,EAAD,CAAW/Y,KAAO,cAACyZ,EAAA,EAAD,QAEpB,cAACtE,EAAA,EAAD,CACE1V,MAAM,QACNQ,MAAM,OACND,KAAO,cAAC0Z,EAAA,EAAD,IACPC,SAAU,EACVxJ,QAAU,kBAAM6I,EAAS/I,EAAQ,IACjCsJ,SAAWtJ,IAAUoI,GAAiBrJ,OAAS,WAlD/ChK,UA2DhB,cAACrH,EAAA,EAAD,CACE0F,MAAM,OACNhC,IAAI,SACJpD,IAAI,QACJJ,UAAU,SACVC,MAAM,SALR,SAOE,cAACqT,GAAD,UC3FAyI,GAAY/Q,YAAY,CAC5B3H,KAAM,OACNmF,aAAc,GACdyC,SAAU,CACR+Q,OAAQ,CACNxQ,QADM,SACGJ,EAAOC,GACd,MAAY,CAAKA,EAAOC,SAAZ,mBAAwBF,MAGxC6Q,UAAW,CACTzQ,QADS,SACAJ,EAAOC,GACd,IAAM2D,EAAI5D,EAAMsL,WAAW,qBAAGjO,KAAgB4C,EAAOC,QAAQ7C,MAC7D,IAAY,IAAPuG,EAAW,OAAO5D,EAEvB,IAAM8Q,EAAQ,YAAQ9Q,GAEtB,OADA8Q,EAAStF,OAAQ5H,EAAG,GACbkN,IAGXC,SAAU,SAAC/Q,EAAOC,GAAR,OAAmBA,EAAOC,SACpC8Q,QAAS,CACP5Q,QADO,SACEJ,EAAOC,GACd,IAAM2D,EAAI5D,EAAMsL,WAAW,qBAAGjO,KAAgB4C,EAAOC,QAAQ7C,MAC7D,IAAY,IAAPuG,EAAW,MAAM,CAAG3D,EAAOC,SAAhB,mBAA4BF,IAE5C,IAAM8Q,EAAQ,YAAQ9Q,GAEtB,OADA8Q,EAAStF,OAAQ5H,EAAG,GACd,CAAG3D,EAAOC,SAAhB,mBAA4B4Q,SAQ7B,GAKHH,GAAU9L,QAJZ+L,GADK,GACLA,OACAC,GAFK,GAELA,UACAE,GAHK,GAGLA,SACAC,GAJK,GAILA,QAGaL,MAAf,QC1BaM,GAAmBlM,aAC9B,kBAA6B,CAAEC,aAA/B,EAAGA,aAA0CkM,KAA7C,EAAiBA,QACjB,CACEnR,oBACAiR,YAJ4BjM,EAXnB,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,aAAckM,EAAsC,EAAtCA,KAAMnR,EAAgC,EAAhCA,iBAAkBiR,EAAc,EAAdA,QAC5C3T,EAAO8T,cAAP9T,GAOR,OALA+T,qBAAU,WACR,IAAMC,EDwBa,SAAEhU,EAAI2C,GAAN,OAAiBA,EAAMsF,MAAM,gBAAOgM,EAAP,EAAGjU,GAAH,OAAiBA,IAAOiU,KCxB5DC,CAASlU,EAAI6T,GACzBnR,EAAiBsR,KAChB,CAAEhU,EAAI6T,EAAMnR,IAER,cAAC,GAAD,CAAkB+P,OAAS,kBAAMkB,EAAQhM,S,oBCXrCwM,GAAe,SAAC/c,GAC3B,OACE,cAACC,EAAA,EAAD,CACE8D,MAAI,EACJ3D,MAAM,SACNC,QAAQ,SACR8T,UAAW,CAAC,UAAW,UAJzB,SAME,eAAClU,EAAA,EAAD,CAAKG,MAAM,SAAX,UACE,cAACS,EAAA,EAAD,CAASC,MAAM,IAAf,SAAoBd,EAAMmF,KAAKmC,QAC/B,cAAC0V,GAAA,EAAD,CACE7X,KAAMnF,EAAMmF,KAAKgS,KACjB8F,WAAa,SAAAvZ,GAAI,OACf,cAACT,EAAA,EAAD,CAAMtB,KAAK,QAAQ0Y,OAAO,OAA1B,SACG3W,EAAK0F,WAGV8T,aAAe,SAAAxZ,GAAI,OACjB,cAACT,EAAA,EAAD,CAAMtB,KAAK,QAAQI,MAAM,SAAzB,SACG2B,EAAKgW,UAIZ,cAACzZ,EAAA,EAAD,CACE2D,UAAU,MACVzD,UAAU,MACVwD,IAAI,SACJ5C,OAAO,QAJT,SAME,cAAC0W,EAAA,EAAD,CACE1V,MAAM,QACNQ,MAAQ,cAAC4a,GAAA,EAAD,IACR1K,QAAUzS,EAAMod,wBCpCfC,GAAY,CACvBpZ,KAAM,YACNqD,MAAO,sBACP6P,KAAM,CAAC,CACL/N,QAAS,gBACTsQ,KAAM,cACL,CACDtQ,QAAS,oBACTsQ,KAAM,aACNnJ,aAAc,CACZhD,OAAQ,IAEV+P,UAAW,CACT9Z,KAAM,eACN+Z,MAAO,gCAER,CACDnU,QAAS,eACTsQ,KAAM,cACL,CACDtQ,QAAS,QACTsQ,KAAM,aACNnJ,aAAc,CACZhD,OAAQ,IAEViQ,UAAW,CACTha,KAAM,eACN+Z,MAAO,8BC3BAE,GAAU,CACrBxZ,KAAM,UACNqD,MAAO,UACP6P,KAAM,CAAC,CACL/N,QAAS,SACTsQ,KAAM,aACNgE,SAAU,6BACT,CACDtU,QAAS,QACTsQ,KAAM,aACNgE,SAAU,0BACT,CACDtU,QAAS,wBACTsQ,KAAM,aACNgE,SAAU,2BACVC,SAAU,CACRC,OAAQ,yBAET,CACDxU,QAAS,SACTsQ,KAAM,aACNgE,SAAU,qBACT,CACDtU,QAAS,SACTsQ,KAAM,aACNgE,SAAU,+B,oBCjBDG,GAAU,SAAC,GAA8C,IAA5Cra,EAA2C,EAA3CA,KAAMsY,EAAqC,EAArCA,GAAItT,EAAiC,EAAjCA,MAAOsV,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACnD,EAA0Bnb,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEML,EAAcP,EAAaF,IAAIQ,OAAOT,MACtCW,EAAgBR,EAAaF,IAAID,MAEvC,OACE,eAAC9B,EAAA,EAAD,CACE8C,aAAe,kBAAMD,GAAS,IAC9BE,aAAe,kBAAMF,GAAS,IAC9BvC,IAAI,QAHN,UAKE,cAAC,IAAD,CACEub,GAAKA,EACLnb,MAAO,CAAEqd,eAAgB,QAF3B,SAIE,eAAC/d,EAAA,EAAD,CACEE,UAAU,SACVC,MAAM,SACNG,IAAK,CAAE+S,OAAQ,SAHjB,UAKE,cAACzS,EAAA,EAAD,CACEC,MAAQ,EACRiB,MAAQc,EAAQJ,EAAcC,EAC9B3B,OAAO,OAHT,SAOI8C,KAAKC,MAAO0E,EAAQ,KAAS,MAGjC,cAAC3H,EAAA,EAAD,CACEC,MAAQ,EACRiB,MAAQc,EAAQJ,EAAcC,EAC9B3B,OAAO,OAHT,SAKIyC,SAIR,eAACvD,EAAA,EAAD,CACE0E,MAAI,EACJxE,UAAU,MACVE,QAAQ,UAHV,UAKE,cAAC,EAAD,CACEiC,KAAO,cAAC2b,GAAA,EAAD,IACPtd,MAAQkC,EACN,CAAEqb,OAAQ,UAAWC,UAAW,kBAC9B,CAAEC,WAAY,UAElB3L,QAAU,kBAAMsL,EAAYA,SAAc,KAE5C,cAAC,EAAD,CACEzb,KAAO,cAAC+b,GAAA,EAAD,IACP3b,cAAgBR,EAAahB,OAAOC,OAAO,YAC3CR,MAAQkC,EAAQ,CAAEqb,OAAQ,WAAc,CAAEE,WAAY,UACtD3L,QAAU,kBAAMqL,EAAWA,SAAa,Y,UC7DrCQ,GAAa,SAAC,GAAc,IAAZ7B,EAAW,EAAXA,KAC3B,EAA0B7Z,mBAAS,IAAnC,mBAAQ2b,EAAR,KAAcC,EAAd,KAkBA,OAhBA7B,qBAAW,WACT,IADe,EACT8B,EAAI,GACN1L,EAAU,GAFC,eAGG0J,GAHH,IAGf,IAAI,EAAJ,qBAAyB,CAAC,IAAfG,EAAc,QACvB7J,EAAQhC,KAAK6L,GACR7J,EAAQzB,OAASmN,EAAEnN,SACtBmN,EAAE1N,KAAKgC,GACPA,EAAU,KAPC,8BAUVA,EAAQzB,OAAS,GAAImN,EAAE1N,KAAKgC,GACjCyL,EAAQC,KACP,CACDhC,IAIA,cAACxc,EAAA,EAAD,CACEE,UAAU,SACVC,MAAM,SAFR,SAKIme,EAAK9a,KAAK,SAAAgZ,GAAI,OACZ,cAACxc,EAAA,EAAD,CACEE,UAAU,MACVwD,IAAI,SAFN,SAMI8Y,GAHI5T,qBCRL6V,GAAOpO,aAClB,kBAA6B,CAC3BC,aADF,EAAGA,aAEDkM,KAFF,EAAiBA,QAIjB,CACEpR,qBACA8Q,UACAG,YACAF,cATgB9L,EAWjB,YAQI,IAPL6L,EAOI,EAPJA,OACA5L,EAMI,EANJA,aACA6L,EAKI,EALJA,UACAK,EAII,EAJJA,KACAH,EAGI,EAHJA,SACAc,EAEI,EAFJA,cACA/R,EACI,EADJA,kBAEA,EAAkCzI,mBAAS,IAA3C,mBAAQ+b,EAAR,KAAkBC,EAAlB,KAsDA,OApDAjC,qBAAW,WACT,IAAMkC,EACJ,cAAC,IAAD,CACE/C,GAAG,OACHrJ,QAAU,kBAAMpH,KAFlB,SAKE,cAAC,EAAD,CACE/I,KAAO,cAACwc,EAAA,EAAD,CAAWnd,KAAK,cAHrB,OAQFod,EAAa,YAAItC,GAAMuC,MAE3B,SAAE5P,EAAG0B,GAAL,OAAYX,GAAyBW,GAAMX,GAAyBf,MAGtEwP,EAAY,GAAD,mBACNG,EAAWtb,KAAK,SAAAmZ,GAAG,OACpB,cAAC,GAAD,CACEpU,MACE2H,GAAyByM,GAE3Bd,GAAE,gBAAac,EAAIhU,IACnBpF,KACEoZ,EAAIzT,YAAYC,SAAWwT,EAAIzT,YAAYE,UAAY,MAGzDyU,SAAW,kBAAM1B,EAAWQ,KADtBA,EAAIhU,QAVL,CAcTiW,OAED,CACDpC,EACAL,EACA/Q,IAGFsR,qBAAW,WAET,IAAMsC,EAAYC,KAAKC,MAAOC,aAAaC,QAAS,SAC/CJ,GAAaA,EAAU3N,QAASgL,EAAU2C,GAC/CG,aAAaE,QAAS,UAAW,WAChC,IAGH3C,qBAAW,WACTyC,aAAaE,QAAQ,OAAQJ,KAAKK,UAAU9C,MAC3C,CAAEA,IAGH,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,KAAK,OAAZ,SACE,cAAC,GAAD,CAAkBnE,OAAS,kBAAMc,EAAO5L,QAE1C,cAAC,IAAD,CAAOiP,KAAK,YAAZ,SACE,cAAChD,GAAD,MAEF,eAAC,IAAD,CAAOgD,KAAK,WAAZ,UACE,cAAC,GAAD,CACEra,KAAOkY,GACPD,cAAgBA,IAElB,cAAC,GAAD,CACEjY,KAAOsY,GACPL,cAAgBA,OAGpB,cAAC,IAAD,CAAOoC,KAAK,IAAZ,SACE,cAACvf,EAAA,EAAD,CACEI,QAAQ,SADV,SAGE,cAAC,GAAD,CAAYoc,KAAOkC,gB,wCCrHlBc,GAAU,SAACzf,GAAD,OACrB,cAAC0f,GAAA,EAAkBC,SAAnB,UACI,SAAAhe,GAAI,MACK,UAATA,EACE,cAACie,GAAA,EAAD,CAAazf,UAAU,aAAayZ,KAAM5Z,EAAM4Z,KAAhD,SACE,cAAC3Z,EAAA,EAAD,CACE8D,MAAI,EACJ4B,MAAM,SACNrF,WAAW,UACXuf,UAAU,QACVzf,MAAM,SACNC,QAAQ,SANV,SAQGL,EAAM8f,aAGT9f,EAAM4Z,MACR,eAAC,KAAD,WACE,cAAC3Z,EAAA,EAAD,CACEK,WAAW,QACXJ,IAAI,SACJG,QAAQ,MACRD,MAAM,SACND,UAAU,MALZ,SAOE,cAACsX,EAAA,EAAD,CACEnV,KAAM,cAACyd,GAAA,EAAD,IACNtN,QAASzS,EAAMod,kBAGnB,cAACnd,EAAA,EAAD,CACE0E,MAAI,EACJrE,WAAW,UACXF,MAAM,SACNC,QAAQ,SAJV,SAMGL,EAAM8f,kBCEJE,OAnCf,WACE,MAAsCpd,oBAAS,GAA/C,mBAAOqd,EAAP,KAAoBC,EAApB,KAEM9C,EAAgB,kBAAM8C,GAAgBD,IAE5C,OACE,cAAC,IAAME,WAAP,UACE,cAACC,EAAA,EAAD,CAASrO,MAAO7P,EAAcme,MAAI,EAAlC,SACE,eAACpgB,EAAA,EAAD,CACE0E,MAAI,EACJrE,WAAY,CACVggB,MAAO,8BACP9e,MAAM,EACN+e,OAAQ,SACR5e,KAAM,QANV,UASE,cAAC,EAAD,CAAQoC,MAAM,IACd,eAAC9D,EAAA,EAAD,CACEE,UAAU,MACV4D,MAAI,EACJ1D,QAAQ,SACRsb,SAAU,CAAEnE,WAAY,UAJ1B,UAME,cAACkH,GAAD,CAAMtB,cAAeA,IACrB,cAAC,GAAD,CAASxD,KAAMqG,EAAa7C,cAAeA,EAA3C,4C,SC5BGoD,gBAAgB,CAC7BjQ,aAAcrF,GACduR,KAAMP,KCKYuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvW,MACvB,2DCRN,IAAMwW,GAAQC,YAAe,CAC3BnV,QAASoV,KAGXC,IAAS7N,OACP,cAAC,IAAMgN,WAAP,UACE,cAAC,IAAD,CAAUU,MAAQA,GAAlB,SACE,cAAC,GAAD,QAGJI,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.99707652.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Heading } from 'grommet';\n\nexport const AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand40'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    style={{ zIndex: '1' }}\n    {...props}\n  >\n    <Heading level='3' margin='none'>Recruited Proto</Heading>\n  </Box>\n);\n\n","import * as _ from 'lodash';\n\nimport { base } from 'grommet/themes/base';\n\n// Palette\n// https://coolors.co/51008f-1e8ee9-ffb200-f0faed-a41623\nexport const ThemeColors = {\n  background: '#51008F', // indigo\n  brand: '#1E8EE9', // bleu de france\n  accentMain: '#FFB200', // chinese yellow\n  accentSecondary: '#A41623', // auburn\n  text: '#F0FAED', // honeydew\n };\n\n // TODO: ThemeColor Shades\n\nconst customTheme = {\n  global: {\n    colors: {\n      // Grommet theming\n      brand: ThemeColors.brand,\n      brand40: '#1e8ee940', // Header\n      focus: 'brand',\n      'accent-1': ThemeColors.accentMain,\n      'accent-2': ThemeColors.accentSecondary,\n      text: {\n        dark: ThemeColors.text\n      }\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n  select: {\n    icons: {\n      color: ThemeColors.text\n    }\n  },\n  tab: {\n    color: ThemeColors.brand,\n    border: {\n      color: {\n        dark: ThemeColors.brand\n      }\n    }\n  }\n};\n\nexport const GrommetTheme = _.defaultsDeep(customTheme, base);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Text } from 'grommet';\n\nimport { GrommetTheme } from './GrommetTheme';\n\nexport const HoverIcon = ({\n  icon,\n  label,\n  active,\n  activeColor,\n  inactiveColor,\n  ...boxProps\n}) => {\n  const [hover, setHover] = useState(false);\n\n  activeColor = activeColor || GrommetTheme.tab.active.color;\n  inactiveColor = inactiveColor || icon.props.color || GrommetTheme.tab.color;\n\n  return (\n    <Box\n      direction=\"column\"\n      align=\"center\"\n      onMouseEnter={ () => setHover(true) }\n      onMouseLeave={ () => setHover(false) }\n      { ...boxProps }\n    >\n      {{\n        ...icon,\n        props: {\n          ...icon.props,\n          color: active || hover ? activeColor : inactiveColor\n        }\n      }}\n      { label ?\n        <Text\n          color={ active || hover ? activeColor : inactiveColor }\n        >\n          { label }\n        </Text>\n        : undefined\n      }\n    </Box>\n  )\n};\n\nHoverIcon.propTypes = {\n  icon: PropTypes.node.isRequired,\n  label: PropTypes.string,\n  active: PropTypes.bool,\n  activeColor: PropTypes.string,\n  inactiveColor: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Heading, Meter } from 'grommet';\n\nexport const CompensationPieChart = ({ baseSalary, benefitsTotal }) => {\n  const key = [{\n    amount: baseSalary,\n    color: 'brand',\n    name: 'Base Salary'\n  }, {\n    amount: benefitsTotal,\n    color: 'accent-1',\n    name: 'Benefits'\n  }].map( item => (\n    <Box\n      direction='row'\n      justify='between'\n      gap='small'\n      key={ item.name }\n    >\n      <Heading\n        level='3'\n        color={ item.color }\n        margin='none'\n      >\n        { item.name }\n      </Heading>\n      <Heading\n        level='3'\n        color={ item.color }\n        margin='none'\n        alignSelf='end'\n      >\n        { Math.round(item.amount) }\n      </Heading>\n    </Box>\n  ));\n\n  return (\n    <Box\n      direction='row'\n      gap='medium'\n      flex={false}\n    >\n      <Meter\n        size='xsmall'\n        type='circle'\n        thickness='large'\n        values={[\n          {\n            value: baseSalary,\n            color: 'brand'\n          },\n          {\n            value: benefitsTotal,\n            color: 'accent-1'\n          }\n        ]}\n      />\n      <Box\n        direction='column'\n        alignSelf='center'\n      >\n        { key }\n      </Box>\n    </Box>\n  );\n};\n\nCompensationPieChart.propTypes = {\n  baseSalary: PropTypes.number.isRequired,\n  benefitsTotal: PropTypes.number.isRequired\n};","import { assign } from \"lodash\";\n\nimport { ThemeColors } from './GrommetTheme';\n\n// *\n// * Colors\n// *\nconst text = ThemeColors.text;\nconst colors = [\n  ThemeColors.brand,\n  ThemeColors.accentMain,\n  ThemeColors.accentSecondary,\n  text\n];\n// const yellow200 = \"#FFF59D\";\n// const deepOrange600 = \"#F4511E\";\n// const lime300 = \"#DCE775\";\n// const lightGreen500 = \"#8BC34A\";\n// const teal700 = \"#00796B\";\n// const cyan900 = \"#006064\";\n// const blueGrey50 = \"#ECEFF1\";\n// const blueGrey300 = \"#90A4AE\";\n// const blueGrey700 = \"#455A64\";\n// const grey900 = \"#212121\";\n// *\n// * Typography\n// *\nconst sansSerif = \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 16;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  // width: 350,\n  // height: 350,\n  padding: 50\n};\n// *\n// * Labels\n// *\nexport const baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize,\n  letterSpacing,\n  padding,\n  fill: text,\n  stroke: \"transparent\",\n  strokeWidth: 0\n};\n\nconst centeredLabelStyles = assign({ textAnchor: \"middle\" }, baseLabelStyles);\n// *\n// * Strokes\n// *\n// const strokeDasharray = \"10, 5\";\n// const strokeLinecap = \"round\";\n// const strokeLinejoin = \"round\";\n\nexport const VictoryTheme = {\n  area: assign(\n    {\n      style: {\n        data: {\n          fill: text \n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  axis: assign(\n    {\n      style: {\n        axis: {\n          fill: \"transparent\",\n          stroke: \"transparent\"\n        },\n        axisLabel: assign({}, centeredLabelStyles, {\n          padding,\n          stroke: \"transparent\"\n        }),\n        grid: {\n          fill: \"none\",\n          stroke: \"transparent\",\n        },\n        ticks: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n        },\n        tickLabels: assign({}, baseLabelStyles, {\n          fill: text \n        })\n      }\n    },\n    baseProps\n  ),\n  bar: assign(\n    {\n      style: {\n        data: {\n          fill: text,\n          padding,\n          strokeWidth: 0,\n          width: 24\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  boxplot: assign(\n    {\n      style: {\n        max: { padding, stroke: text, strokeWidth: 1 },\n        maxLabels: baseLabelStyles,\n        median: { padding, stroke: text, strokeWidth: 1 },\n        medianLabels: baseLabelStyles,\n        min: { padding, stroke: text, strokeWidth: 1 },\n        minLabels: baseLabelStyles,\n        q1: { padding, fill: text },\n        q1Labels: baseLabelStyles,\n        q3: { padding, fill: text },\n        q3Labels: baseLabelStyles\n      },\n      boxWidth: 20\n    },\n    baseProps\n  ),\n  candlestick: assign(\n    {\n      style: {\n        data: {\n          stroke: text\n        },\n        labels: baseLabelStyles\n      },\n      candleColors: {\n        positive: \"#ffffff\",\n        negative: text\n      }\n    },\n    baseProps\n  ),\n  chart: baseProps,\n  errorbar: assign(\n    {\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: text,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  group: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, { padding: 5 })\n    }\n  },\n  line: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: text,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  pie: assign(\n    {\n      colorScale: colors,\n      style: {\n        data: {\n          padding,\n          stroke: text,\n          strokeWidth: 1\n        },\n        labels: assign({}, baseLabelStyles, { padding: 20 })\n      }\n    },\n    baseProps\n  ),\n  scatter: assign(\n    {\n      style: {\n        data: {\n          fill: text,\n          opacity: 1,\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  stack: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  tooltip: {\n    style: assign({}, baseLabelStyles, { padding: 5, pointerEvents: \"none\" }),\n    flyoutStyle: {\n      stroke: text,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5, pointerEvents: \"none\" }),\n        flyout: {\n          stroke: text,\n          strokeWidth: 1,\n          fill: \"#f0f0f0\",\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    baseProps\n  )\n};","export const convertToHours = ( daysOrHours, type, hoursInADay ) => {\n  if ( !daysOrHours ) {\n    return 0;\n  }\n\n  return type === 'hours' ? daysOrHours : daysOrHours * hoursInADay;\n};","export const insuranceValue = ( insurance ) => {\n  return {\n    type: 'money',\n    amount: 12 * insurance.reduce(\n      (total, { yours, theirs }) => total + (+theirs) - (+yours),\n      0\n    )\n  }\n};","import { createSelector, createSlice, nanoid } from '@reduxjs/toolkit';\nimport { equivalentWage } from './math/equivalentWage';\nimport { workingDays } from './math/workingDays';\nimport moment from 'moment';\nimport { paidTimeOffValue } from './math/paidTimeOffValue';\nimport { bonusValue } from './math/bonusValue';\nimport { retirementValue } from './math/retirementValue';\nimport { insuranceValue } from './math/insuranceValue';\nimport { savingsAccountsValue } from './math/savingsAccountsValue';\nimport { fringeValue } from './math/fringeValue';\nimport { benefitsTotal } from './math/benefitsTotal';\n\nfunction initialState() {\n  return {\n    id: nanoid(),\n    baseWage: {\n      type: 'salary',\n      amount: ''\n    },\n    basics: {\n      hoursInADay: 8,\n      daysInAWeek: 5,\n      weeksInAYear: 52,\n      holidays: 8\n    },\n    opportunity: {\n      company: '',\n      position: '',\n      startDate: undefined\n    },\n    pto: {\n      vacation: '',\n      vacationType: 'days',\n      sick: '',\n      sickType: 'days',\n      personal: '',\n      personalType: 'days'\n    },\n    bonus: {\n      signOn: '',\n      cyclicalBonus: {\n        type: '%',\n        amount: '',\n        frequency: 1,\n        eligibility: 'proRated'\n      }\n    },\n    retirement: {\n      contribution: '',\n      match: '',\n      profitSharingPercent: '',\n      stockOptionsPercent: ''\n    },\n    vesting: {\n      type: 'evenly',\n      years: '',\n      schedule: []\n    },\n    insurance: [{\n        type: 'Health',\n        yours: '',\n        theirs: ''\n    }, {\n        type: 'Dental',\n        yours: '',\n        theirs: ''\n    }, {\n        type: 'Vision',\n        yours: '',\n        theirs: ''\n    }],\n    savingsAccounts: {\n      hsa: '',\n      fsa: ''\n    },\n    supplimentalInsurance: [{\n      type: '',\n      yours: '',\n      theirs: '',\n      key: Date.now() // TODO: this can be auto-generated\n    }],\n    fringeBenefits: [{\n      type: 'Bus Pass / Parking',\n      amount: '',\n      key: Date.now() + 1\n    }, {\n      type: 'CE / Tutition',\n      amount: '',\n      key: Date.now() + 2\n    }, {\n      type: 'Gym Membership',\n      amount: '',\n      key: Date.now() + 3\n    }]\n  }\n};\n\nconst compensationSlice = createSlice({\n  name: 'compensation',\n  initialState: initialState(),\n  reducers: {\n    resetCompensation: () => initialState(),\n    loadCompensation: (state, action) => action.payload,\n    setBaseWage: { // TODO: seperate into two functions\n      reducer(state, action) {\n        state.baseWage = action.payload\n      }\n    },\n    // Basics\n    setHolidays: {\n      reducer(state, action) {\n        state.basics.holidays = action.payload;\n      }\n    },\n    // Opportunity\n    setCompanyName: {\n      reducer(state, action) {\n        state.opportunity.company = action.payload;\n      }\n    },\n    setPositionTitle: {\n      reducer(state, action) {\n        state.opportunity.position = action.payload;\n      }\n    },\n    setStartDate: {\n      reducer(state, action) {\n        state.opportunity.startDate = action.payload;\n      }\n    },\n    setPto: {\n      reducer(state, action) {\n        state.pto = action.payload;\n      }\n    },\n    // Bonus\n    setSignOnAmount: {\n      reducer(state, action) {\n        state.bonus.signOn = action.payload;\n      }\n    },\n    setCyclicalAmount: {\n      reducer(state, action) {\n        state.bonus.cyclicalBonus.amount = action.payload;\n      }\n    },\n    setCyclicalType: {\n      reducer(state, action) {\n        state.bonus.cyclicalBonus.type = action.payload;\n      }\n    },\n    setCyclicalFrequency: {\n      reducer(state, action) {\n        state.bonus.cyclicalBonus.frequency = action.payload;\n      }\n    },\n    setCyclicalEligibility: {\n      reducer(state, action) {\n        state.bonus.cyclicalBonus.eligibility = action.payload;\n      }\n    },\n    // Retirement\n    setRetirementContribution: {\n      reducer(state, action) {\n        state.retirement.contribution = action.payload;\n      }\n    },\n    setRetirementMatch: {\n      reducer(state, action) {\n        state.retirement.match = action.payload;\n      }\n    },\n    setProfitSharingPercent: {\n      reducer(state, action) {\n        state.retirement.profitSharingPercent = action.payload;\n      }\n    },\n    setStockOptionsPercent: {\n      reducer(state, action) {\n        state.retirement.stockOptionsPercent = action.payload;\n      }\n    },\n    // Vesting\n    setVesting: {\n      reducer(state, action) {\n        state.vesting = action.payload;\n      }\n    },\n    // Insurance\n    setInsurance: {\n      reducer(state, action) {\n        state.insurance = action.payload;\n      }\n    },\n    // Savings Accounts\n    setSavingsAccounts: {\n      reducer(state, action) {\n        state.savingsAccounts = action.payload;\n      }\n    },\n    // Supplimental Insurace\n    setSupplimentalInsurance: {\n      reducer(state, action) {\n        state.supplimentalInsurance = action.payload;\n      }\n    },\n    // Fringe Benes\n    setFringeBenefits: {\n      reducer(state, action) {\n        state.fringeBenefits = action.payload;\n      }\n    }\n  }\n});\n\n// Selectors\nexport const selectBaseWage = state => state.baseWage;\nexport const selectBasics = state => state.basics;\nexport const selectOpportunity = state => state.opportunity;\nexport const selectPto = state => state.pto;\nexport const selectBonus = state => state.bonus;\nexport const selectRetirement = state => state.retirement;\nexport const selectVesting = state => state.vesting;\nexport const selectInsurance = state => state.insurance;\nexport const selectSavingsAccounts = state => state.savingsAccounts;\nexport const selectSupplimentalInsurance = state => state.supplimentalInsurance;\nexport const selectFringeBenefits = state => state.fringeBenefits;\n\nexport const selectEquivalentWage = createSelector(\n  selectBasics,\n  selectBaseWage,\n  selectPto,\n  ( basics, baseWage, pto ) => equivalentWage( basics, baseWage, pto )\n);\nexport const selectEquivalentHourlyWage = createSelector(\n  selectEquivalentWage,\n  wage => wage.hourly\n);\nexport const selectEquivalentSalary = createSelector(\n  selectEquivalentWage,\n  wage => wage.salary\n);\n\nexport const selectWorkingDays = createSelector(\n  selectOpportunity,\n  ({ startDate }) => {\n    if ( !startDate ) return 0;\n    return workingDays( moment(startDate) );\n  }\n);\n\n// Value selectors\nexport const selectPaidTimeOffValue = createSelector(\n  selectPto,\n  selectEquivalentHourlyWage,\n  selectBasics,\n  ( pto, hourlyWage, { hoursInADay } ) => paidTimeOffValue( pto, hourlyWage, hoursInADay )\n);\n\nexport const selectBonusValue = createSelector(\n  selectBonus,\n  selectEquivalentSalary,\n  ( bonus, salary ) => bonusValue( bonus, salary )\n);\n\nexport const selectRetirementValue = createSelector(\n  selectEquivalentSalary,\n  selectRetirement,\n  selectVesting,\n  ( salary, retirement, vesting ) => retirementValue( salary, retirement, vesting )\n);\n\nexport const selectInsuranceValue = createSelector(\n  selectInsurance,\n  insurance => insuranceValue( insurance )\n);\n\nexport const selectSavingsAccountsValue = createSelector(\n  selectSavingsAccounts,\n  savings => savingsAccountsValue( savings )\n);\n\nexport const selectSupplimentalInsuranceValue = createSelector(\n  selectSupplimentalInsurance,\n  supplimental => insuranceValue( supplimental )\n);\n\nexport const selectFringeBenefitsValue = createSelector(\n  selectFringeBenefits,\n  fringeBenefits => fringeValue( fringeBenefits )\n);\n\n// All the benefits\nexport const selectItemizedBenefitsValue = createSelector(\n  selectPaidTimeOffValue,\n  selectBonusValue,\n  selectRetirementValue,\n  selectInsuranceValue,\n  selectSavingsAccountsValue,\n  selectSupplimentalInsuranceValue,\n  selectFringeBenefitsValue,\n  ( pto, bonus, retirement, insurance, savings, supplimental, fringe ) => [{\n    name: 'Paid Time Off',\n    value: pto\n  }, {\n    name: 'Bonus',\n    value: bonus\n  }, {\n    name: 'Retirement',\n    value: retirement\n  }, {\n    // TODO: seperate insurance and savings?\n    name: 'Insurance',\n    value: {\n      type: 'money',\n      amount: insurance.amount + savings.amount\n    }\n  }, {\n    name: 'Supplimental Insurance',\n    value: supplimental\n  }, {\n    name: 'Fringe Benefits',\n    value: fringe\n  }]\n);\n\nexport const selectBenefitsCompensation = createSelector(\n  selectItemizedBenefitsValue,\n  itemizedValue => benefitsTotal( itemizedValue )\n);\n\nexport const selectTotalCompensation = createSelector(\n  selectEquivalentSalary,\n  selectBenefitsCompensation,\n  ( salary, benefitsTotal ) => salary + benefitsTotal\n);\n\nexport const {\n  resetCompensation,\n  loadCompensation,\n  setBaseWage,\n  setHolidays,\n  setCompanyName,\n  setPositionTitle,\n  setStartDate,\n  setPto,\n  setSignOnAmount,\n  setCyclicalAmount,\n  setCyclicalType,\n  setCyclicalFrequency,\n  setCyclicalEligibility,\n  setRetirementContribution,\n  setRetirementMatch,\n  setProfitSharingPercent,\n  setStockOptionsPercent,\n  setVesting,\n  setInsurance,\n  setSavingsAccounts,\n  setSupplimentalInsurance,\n  setFringeBenefits\n} = compensationSlice.actions;\n\nexport default compensationSlice.reducer;\n","import './convertToHours';\nimport { convertToHours } from './convertToHours';\n\nexport const equivalentWage = ( basics, baseWage, pto ) => {\n  const { weeksInAYear, daysInAWeek, hoursInADay, holidays } = basics;\n  const {\n    vacation,\n    vacationType,\n    sick,\n    sickType,\n    personal,\n    personalType\n  } = pto;\n\n  const hoursInAYear = weeksInAYear * daysInAWeek * hoursInADay;\n  const holidayHours = holidays * hoursInADay;\n\n  const ptoHours = convertToHours(vacation, vacationType, hoursInADay)\n                 + convertToHours(sick, sickType, hoursInADay)\n                 + convertToHours(personal, personalType, hoursInADay);\n\n  if ( baseWage.type === 'salary' ) {\n    return {\n      salary: +baseWage.amount,\n      hourly: baseWage.amount / ( hoursInAYear - holidayHours - ptoHours )\n    }\n  }\n  return {\n    salary: baseWage.amount * ( hoursInAYear - holidayHours ),\n    hourly: +baseWage.amount\n  }\n};","import moment from 'moment';\nimport business from 'moment-business';\n\nexport const workingDays = ( startDate ) => {\n  if ( !startDate ) {\n    return undefined;\n  }\n\n  const startOfYear = moment(startDate).startOf('year');\n  const endOfYear = moment(startDate).endOf('year').add(1, 'ms');\n\n  return {\n    year: business.weekDays(startOfYear, endOfYear),\n    partial: business.weekDays(startDate, endOfYear)\n  };\n};","import { convertToHours } from './convertToHours';\n\nexport const paidTimeOffValue =\n  ( pto, equivalentHourlyWage, hoursInADay ) => {\n  let amount = 0;\n\n  if ( pto.vacation ) {\n    amount += convertToHours( pto.vacation, pto.vacationType, hoursInADay );\n  }\n\n  if ( pto.sick) {\n    amount += convertToHours( pto.sick, pto.sickType, hoursInADay );\n  }\n\n  if ( pto.personal ) {\n    amount += convertToHours( pto.personal, pto.personalType, hoursInADay );\n  }\n\n  amount *= equivalentHourlyWage;\n\n  return {\n    type: 'money',\n    amount\n  }\n}","export const bonusValue = ( bonus, equivalentSalary ) => {\n  let amount = 0;\n\n  if( bonus.signOn ) {\n    amount += bonus.signOn;\n  }\n\n  if ( bonus.cyclicalBonus.amount ) {\n    let dollars = bonus.cyclicalBonus.amount;\n    if ( bonus.cyclicalBonus.type === '%' ) {\n      dollars /= 100;\n      dollars *= equivalentSalary;\n    }\n\n    amount += dollars * bonus.cyclicalBonus.frequency;\n  }\n\n  return {\n    type: 'money',\n    amount\n  }\n}","export const retirementValue = ( salary, retirement, vesting ) => {\n  const {\n    contribution,\n    match,\n    profitSharingPercent,\n    stockOptionsPercent\n  } = retirement;\n\n  let retirementAmount = 0;\n  \n  if ( contribution ) {\n    retirementAmount += contribution;\n  }\n  if ( match ) {\n    retirementAmount += match;\n  }\n  if ( profitSharingPercent ) {\n    retirementAmount += profitSharingPercent / 100 * salary;\n  }\n  if ( stockOptionsPercent ) {\n    retirementAmount += stockOptionsPercent / 100 * salary;\n  }\n \n\n  if ( vesting.years === 0 ) {\n    return {\n      type: 'money',\n      amount: retirementAmount\n    }\n  }\n\n  const amount = \n    vesting.schedule.map( (percent, i) => \n      // Total amount vested\n      retirementAmount * (i + 1) * percent / 100\n    ).map( (a, i, arr) => {\n      // Amount vested in that year\n      if ( i === 0 ) {\n        return a;\n      }\n      return a - arr[i - 1];\n    } );\n\n  return {\n    type: 'vesting',\n    amount,\n    fullyVested: retirementAmount\n  };\n}","export const savingsAccountsValue = ({ hsa, fsa }) => {\n  return {\n    type: 'money',\n    amount: (+hsa) + (+fsa)\n  }\n};","export const fringeValue = ( fringe ) => {\n  return {\n    type: 'money',\n    amount: 12 * fringe.reduce(\n      (total, { amount }) => total + (+amount), // amount can be empty string\n      0\n    )\n  }\n};","// Gets dollar equivalent for all the benefits, incl. vested ones\nexport const benefitsTotal = ( benefits ) => {\n return benefits.reduce( (total, benefit) => {\n    if ( benefit.value.type === 'vesting' ) {\n      return total + benefit.value.fullyVested;\n    }\n\n    return total + benefit.value.amount;\n  }, 0);\n};","import React, { useState } from 'react';\nimport { Box } from 'grommet';\nimport {\n  VictoryAxis,\n  VictoryBar,\n  VictoryChart,\n  VictoryStack,\n  VictoryLabel\n} from 'victory';\nimport moment from 'moment';\n\nimport { ThemeColors } from '../../GrommetTheme';\nimport { baseLabelStyles, VictoryTheme } from '../../VictoryTheme';\nimport { connect } from 'react-redux';\nimport {\n  selectItemizedBenefitsValue,\n  selectEquivalentSalary,\n  selectWorkingDays\n} from '../compensationSlice';\n\nexport const YearlyCompensationChart = ({\n  allBenefits,\n  baseSalary,\n  startDate,\n  workingDays\n}) => {\n  const year = +moment( startDate ).format('YYYY');\n  const { partial: partialWorkingDays, year: yearWorkingDays } = workingDays;\n  const partialYearAdj = partialWorkingDays / yearWorkingDays;\n\n  const notVestingBenefits =\n    allBenefits.reduce( (total, benefit) => {\n      if ( benefit.value.type === 'vesting' ) {\n        return total;\n      }\n\n      return total + (+benefit.value.amount);\n    }, 0);\n\n  const data = [{\n    baseSalary: baseSalary * partialYearAdj,\n    benefit: notVestingBenefits * partialYearAdj,\n    year\n  }];\n\n  const vestingBenefit =\n    allBenefits.find(\n      b => b.value.type === 'vesting'\n    );\n\n  if ( vestingBenefit ) {\n    const vesting =\n      vestingBenefit.value.amount;\n\n    const fullyVested =\n      vestingBenefit.value.fullyVested;\n\n    data.push(\n      ...([\n        ...vesting,\n        fullyVested\n      ].map( ( vested, i ) => ({\n        baseSalary,\n        benefit: notVestingBenefits + vested,\n        year: year + 1 + i\n      })) )\n    );\n  } else {\n    data.push({\n      baseSalary,\n      benefit: notVestingBenefits,\n      year: year + 1\n    })\n  }\n\n  const yearlyBaseSalary = data.map( d => ({ x: d.year, y: d.baseSalary }) );\n  const benefits = data.map( d => ({ x: d.year, y: d.benefit }) );\n\n  const [selectedYear, setSelectedYear] = useState( year + data.length - 1 );\n  const [hoverYear, setHoverYear] = useState(0);\n\n  const barStyling = {\n    width: ({ datum }) => {\n      const width = VictoryTheme.bar.style.data.width;\n      if( datum.x === selectedYear ) {\n        return width * 1.5;\n      }\n\n      return width;\n    },\n    stroke: ThemeColors.text,\n    strokeWidth: ({ datum }) => {\n      if ( datum.x === hoverYear || datum.x === selectedYear ) {\n        return 3;\n      }\n\n      return 0;\n    }\n  };\n\n  const tickLabels = {\n    fontSize: ({ tick }) => {\n      if ( tick === hoverYear || tick === selectedYear ) {\n        return 24;\n      }\n\n      return 16;\n    },\n    fontWeight: ({ tick }) => {\n      if ( tick === hoverYear || tick === selectedYear ) {\n        return 'bold';\n      }\n\n      return 'normal';\n    }\n  };\n\n  return (\n    <Box direction='column'>\n      <VictoryChart\n        theme={ VictoryTheme }\n        width={ 500 }\n        domainPadding={{\n          x: data.length > 2 ? [30, 20] : [130, 120],\n          y: 20\n        }}\n        events={[{\n          childName: ['baseSalary', 'benefits'],\n          target: 'data',\n          eventHandlers: {\n            onMouseOver: (e, props) => {\n              setHoverYear(year + props.index);\n            },\n            onMouseOut: () => {\n              setHoverYear(0);\n            },\n            onClick: (e, props) => {\n              setSelectedYear(year + props.index);\n            }\n          }\n        }]}\n      >\n        <VictoryAxis\n          tickValues={ data.length < 5 ? data.map( d => d.year ) : undefined }\n          tickFormat={ (x) => x }\n          style={{ tickLabels }}\n        />\n        <VictoryAxis\n          dependentAxis\n          tickFormat={ (y) => (`${y / 1000}k`) }\n        />\n        <VictoryLabel\n          text='Yearly Compensation'\n          textAnchor='middle'\n          x={ 250 }\n          y={ 25 }\n          style={{\n            ...baseLabelStyles,\n            fontWeight: 600,\n            fontSize: '18px'\n          }}\n        />\n        <VictoryStack>\n          <VictoryBar\n            data={ yearlyBaseSalary }\n            name='baseSalary'\n            style={{\n              data: barStyling\n            }}\n          />\n          <VictoryBar\n            data={ benefits }\n            name='benefits'\n            style={{\n              data: barStyling\n            }}\n          />\n        </VictoryStack>\n      </VictoryChart>\n    </Box>\n  );\n}\n\nexport const YearlyCompensationChartStateful = connect(\n  ({ compensation }) => ({\n    allBenefits: selectItemizedBenefitsValue( compensation ),\n    baseSalary: selectEquivalentSalary( compensation ),\n    startDate: compensation.opportunity.startDate,\n    workingDays: selectWorkingDays( compensation )\n  })\n)(YearlyCompensationChart);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, DataTable, Meter } from 'grommet';\n\nexport const BenefitBreakdownChart = ({\n  benefits,\n  benefitsTotal: max,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      direction='column'\n      { ...boxProps }\n    >\n      <DataTable\n        columns={ [{\n          property: 'name',\n          header: 'Benefit',\n          primary: true\n        }, {\n          property: 'value',\n          header: 'Amount ($)',\n          align: 'end'\n        }, {\n          property: 'meter', // to avoid dupe keys\n          render: datum => (\n            <Meter\n              values={ [{ ...datum, color: 'accent-1' }] }\n              max={ max }\n              size='small'\n              thickness='small'\n              background={{ opacity: true }}\n            />\n          )\n        }] }\n        data={\n          benefits.filter( b => (\n            (b.value.type === 'vesting' && b.value.fullyVested > 0)\n            || b.value.amount > 0\n          )).map( b => ({\n            ...b,\n            value: Math.round(\n              b.value.type === 'money' ? b.value.amount : b.value.fullyVested )\n            }))\n        }\n      />\n    </Box>\n  );\n};\n\nBenefitBreakdownChart.propTypes = {\n  benefits: PropTypes.arrayOf(PropTypes.object).isRequired,\n  benefitsTotal: PropTypes.number.isRequired\n};","import React from 'react';\nimport { Box, Heading, Text } from 'grommet';\n\nexport const NoCompensation = () => (\n  <Box align='center'>\n    <Box\n      direction='row'\n      align='end'\n      margin={{ 'vertical': 'medium' }}\n    >\n      <Heading\n        level='3'\n        color='accent-1'\n        margin='0'\n      >\n        ?\n      </Heading>\n      <Heading\n        color='accent-1'\n        margin='0'\n      >\n        ?\n      </Heading>\n      <Heading\n        level='3'\n        color='accent-1'\n        margin='0'\n      >\n        ?\n      </Heading>\n    </Box>\n    <Text margin={{  bottom: 'medium' }}>\n      Please enter a wage to get started!\n    </Text>\n  </Box>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Heading } from 'grommet';\n\nimport { NoCompensation } from './NoCompensation';\n\nexport const TotalHeadline = ({ company, position, total, ...boxProps }) => {\n\n  let headline = 'Total Compensation';\n  if ( company && position ) {\n    headline = `${position} @ ${company}`;\n  } else if ( company ) {\n    headline = company;\n  } else if ( position ) {\n    headline = position;\n  }\n\n  return (\n      <Box { ...boxProps } >\n        <Heading\n          level='3'\n          alignSelf='center'\n          margin='none'\n        >\n          { headline }\n        </Heading>\n        { total > 0 ?\n          <Heading\n            level='1'\n            alignSelf='center'\n            margin='none'\n          >\n            { '$ ' + Math.round( total ) }\n          </Heading>\n        :\n          <NoCompensation />\n        }\n      </Box>\n  );\n};\n\nTotalHeadline.propTypes = {\n  company: PropTypes.string,\n  position: PropTypes.string,\n  total: PropTypes.number.isRequired\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Box, Text } from 'grommet';\n\nimport { CompensationPieChart } from './CompensationPieChart';\nimport { YearlyCompensationChartStateful } from './YearlyCompensationChart';\nimport { BenefitBreakdownChart } from './BenefitBreakdownChart';\nimport { TotalHeadline } from './TotalHeadline';\n\nimport {\n  selectItemizedBenefitsValue,\n  selectEquivalentSalary,\n  selectWorkingDays,\n  selectBenefitsCompensation,\n  selectTotalCompensation\n} from '../compensationSlice';\n\nexport const TotalCompensation = ({\n  allBenefits,\n  baseSalary,\n  benefitsTotal,\n  opportunity,\n  simpleTotal,\n  workingDays,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      align='center'\n      gap='small'\n      { ...boxProps }\n    >\n      <TotalHeadline\n        key='headline'\n        company={ opportunity.company }\n        position={ opportunity.position }\n        total={ simpleTotal }\n        margin={{ bottom: 'small' }}\n      />\n      { benefitsTotal > 0 ?\n        [\n          <CompensationPieChart\n            key='pie'\n            baseSalary={ baseSalary }\n            benefitsTotal={ benefitsTotal }\n          />\n        ,\n          <BenefitBreakdownChart\n            key='breakdown'\n            benefits={ allBenefits }\n            benefitsTotal={ benefitsTotal }\n          />\n        ]\n        : undefined\n      }\n      { baseSalary ?\n        workingDays ?\n          <YearlyCompensationChartStateful\n            key='yearly'\n          />\n          : <Text>Please enter a start date</Text>\n        : undefined\n      }\n    </Box>\n  );\n}\n\nexport const TotalCompensationStateful = connect(\n  ({ compensation }) => ({\n    allBenefits: selectItemizedBenefitsValue( compensation ),\n    baseSalary: selectEquivalentSalary( compensation ),\n    benefitsTotal: selectBenefitsCompensation( compensation ),\n    opportunity: compensation.opportunity,\n    simpleTotal: selectTotalCompensation( compensation ),\n    workingDays: selectWorkingDays( compensation )\n  })\n)(TotalCompensation);","export const setNumberWithinRange = (low, high, value, set) => {\n  if ( value < low ) {\n    value = low;\n  } else if ( value > high ) {\n    value = high;\n  }\n\n  set(+value);\n}\n\nexport const setIntegerWithinRange = (low, high, value, set) => {\n  return setNumberWithinRange( low, high, Math.round(value), set );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, Select, TextInput } from 'grommet';\n\nimport { setNumberWithinRange } from '../functions/setWithinRange';\nimport { setBaseWage } from './compensationSlice';\n\nconst wageTypes = [{\n  name: 'Salary (Yearly)',\n  value: 'salary'\n}, {\n  name: 'Hourly',\n  value: 'hourly'\n}];\n\nexport const BaseWage = ({ value: { amount, type }, onChange }) => {\n\n  const handleChange = event => setNumberWithinRange(\n    0,\n    10E7,\n    event.target.value,\n    amount => onChange({ type, amount })\n  );\n\n  return (\n    <Box\n      direction='row'\n      align='center'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <FormField\n        label='$$$'\n        name='baseWage'\n      >\n        <TextInput\n          type='number'\n          name='baseWage'\n          value={ amount }\n          onChange={ handleChange }\n        />\n      </FormField>\n      <FormField\n        name='wageType'\n        label='Type'\n        width='small'\n      >\n        <Select\n          name='wageType'\n          options={ wageTypes }\n          key='value'\n          labelKey='name'\n          valueKey='value'\n          value={ wageTypes.find( w => w.value === type ) }\n          onChange={\n            ({ option }) => onChange({ amount, type: option.value })\n          }\n        />\n      </FormField>\n    </Box>\n  );\n};\n\nBaseWage.propTypes = {\n  value: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const BaseWageStateful = connect(\n  state => ({ value: state.compensation.baseWage }),\n  {\n    onChange: setBaseWage\n  }\n)(BaseWage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, TextInput } from 'grommet';\n\nimport { setIntegerWithinRange } from '../functions/setWithinRange';\nimport { setHolidays } from './compensationSlice';\n\nexport const Holidays = ({ value: holidays, onChange: setHolidays }) => {\n  const holidayChange = (event) => {\n    setIntegerWithinRange(0, 365, event.target.value, setHolidays);\n  };\n\n  return (\n    <Box\n      direction='row'\n      align='center'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <FormField\n        label='Holidays'\n        name='holidays'\n        width='small'\n      >\n        <TextInput\n          type='number'\n          name='holidays'\n          value={ holidays }\n          onChange={ event => holidayChange(event) }\n        />\n      </FormField>\n    </Box>\n  );\n};\n\nHolidays.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const HolidaysStateful = connect(\n  state => ({ value: state.compensation.basics.holidays }),\n  {\n    onChange: setHolidays\n  }\n)(Holidays);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Box,\n  FormField,\n  TextInput,\n  Select\n} from 'grommet';\n\nimport { setNumberWithinRange } from '../functions/setWithinRange';\nimport { setPto } from './compensationSlice';\n\nconst labels = {\n  vacation: 'Paid Time Off',\n  sick: 'Sick Time',\n  personal: 'Personal Time'\n};\n\nconst capitalize = (name) => name.charAt(0).toUpperCase() + name.slice(1);\n\n// TODO: refactor...\nexport const PaidTimeOff = ({value: pto, onChange: setPto}) => {\n\n  const handleChange = (event, name) => {\n    let upperBound = 2080;\n    if ( pto[name + 'Type'] === 'days' ) {\n      upperBound = 365;\n    }\n\n    setNumberWithinRange(\n      0,\n      upperBound,\n      event.target.value,\n      v => setPto({\n        ...pto,\n        [name]: v\n      })\n    );\n  }\n\n  const ptoItem = (name) => (\n    <Box\n      direction='row'\n      align='end'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <FormField\n        label={ labels[name] }\n        name={ name }\n        width='small'\n      >\n        <TextInput\n          type='number'\n          name={ name }\n          value={ pto[name] }\n          onChange={ e => handleChange(e, name) }\n        />\n      </FormField>\n      <FormField\n        name={ name + 'Type' }\n        width='8rem'\n      >\n        <Select\n          name={ name + 'Type' }\n          options={[ 'Days', 'Hours' ]}\n          value={ capitalize(pto[name + 'Type']) }\n          onChange={\n            ({option}) =>\n              setPto({ ...pto, [name + 'Type']: option.toLowerCase() })\n          }\n        />\n      </FormField>\n    </Box>\n  );\n\n  return (\n    <>\n      { ptoItem('vacation') }\n      { ptoItem('sick') }\n      { ptoItem('personal') }\n    </>\n  );\n};\n\nPaidTimeOff.propTypes = {\n  value: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const PaidTimeOffStateful = connect(\n  state => ({ value: state.compensation.pto }),\n  {\n    onChange: setPto\n  }\n)(PaidTimeOff);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, TextInput, Select } from 'grommet';\n\nimport { setNumberWithinRange } from '../functions/setWithinRange';\nimport {\n  setSignOnAmount,\n  setCyclicalAmount,\n  setCyclicalType,\n  setCyclicalFrequency,\n  setCyclicalEligibility\n} from './compensationSlice';\n\nconst frequencies = [{\n  name: 'Annually',\n  value: 1\n}, {\n  name: 'Semiannually',\n  value: 2\n}, {\n  name: 'Quarterly',\n  value: 4\n}, {\n  name: 'Monthly',\n  value: 12\n}, {\n  name: 'Weekly',\n  value: 52\n}];\n\nconst eligibilities = [{\n  name: 'Full Eligibility This Term',\n  value: 'full'\n}, {\n  name: 'Pro-Rated This Term',\n  value: 'proRated'\n}, {\n  name: 'Eligible Next Term',\n  value: 'nextTerm'\n}];\n\n// TODO:\n// Add percentage option\n\nexport const Bonus = ({\n  value: bonus,\n  onSignOnChange,\n  onCyclicalAmountChange,\n  onCyclicalTypeChange,\n  onCyclicalFrequencyChange,\n  onCyclicalEligibilityChange\n}) => {\n  const { signOn, cyclicalBonus } = bonus;\n\n  const updateSignOnBonus = event => {\n    setNumberWithinRange(\n      0,\n      10E7,\n      event.target.value,\n      onSignOnChange\n    )\n  };\n\n  const updateBonus = event => {\n    setNumberWithinRange(\n      0,\n      cyclicalBonus.type === '%' ? 100 : 10E7,\n      event.target.value,\n      onCyclicalAmountChange\n    )\n  }\n\n  return (\n    <>\n      <Box\n        direction='row'\n        align='end'\n        gap='medium'\n        animation='fadeIn'\n      >\n        <FormField\n          label='Sign On Bonus ($)'\n          name='signOnBonus'\n          width='small'\n        >\n          <TextInput\n            type='number'\n            name='signOnBonus'\n            value={ signOn }\n            onChange={ updateSignOnBonus }\n          />\n        </FormField>\n      </Box>\n      <Box height='xxsmall' />\n      <Box\n        direction='row'\n        align='end'\n        gap='medium'\n        animation='fadeIn'\n      >\n        <FormField\n          label='Bonus'\n          name='bonus'\n          width='small'\n        >\n          <TextInput\n            type='number'\n            name='bonus'\n            value= { cyclicalBonus.amount }\n            onChange={ updateBonus }\n          />\n        </FormField>\n        <FormField\n          name='bonusType'\n          width='6rem'\n        >\n          <Select\n            name='bonusType'\n            options={[ '%', '$' ]}\n            plain={ true }\n            value={ cyclicalBonus.type }\n            onChange={ ({option}) => onCyclicalTypeChange( option ) }\n          />\n        </FormField>\n      </Box>\n      <Box\n        direction='row'\n        align='end'\n        gap='medium'\n        animation='fadeIn'\n      >\n        <FormField\n          label='Frequency'\n          name='bonusFreq'\n          width='small'\n        >\n          <Select\n            name='bonusFreq'\n            options={ frequencies }\n            labelKey='name'\n            valueKey='value'\n            value={\n              frequencies.find( f => f.value === cyclicalBonus.frequency )\n            }\n            onChange={ ({ option }) => onCyclicalFrequencyChange( option.value ) }\n          />\n        </FormField>\n        <FormField\n          name='eligibility'\n          width='18rem'\n        >\n          <Select\n            name='eligibility'\n            options={ eligibilities }\n            labelKey='name'\n            valueKey='value'\n            value={\n              eligibilities.find( e => e.value === cyclicalBonus.eligibility )\n            }\n            onChange={ ({ option }) => onCyclicalEligibilityChange( option.value ) }\n          />\n        </FormField>\n      </Box>\n    </>\n  );\n};\n\nBonus.propTypes = {\n  value: PropTypes.object.isRequired,\n  onSignOnChange: PropTypes.func.isRequired,\n  onCyclicalAmountChange: PropTypes.func.isRequired,\n  onCyclicalTypeChange: PropTypes.func.isRequired,\n  onCyclicalFrequencyChange: PropTypes.func.isRequired,\n  onCyclicalEligibilityChange: PropTypes.func.isRequired\n};\n\nexport const BonusStateful = connect(\n  state => ({ value: state.compensation.bonus }),\n  {\n    onSignOnChange: setSignOnAmount,\n    onCyclicalAmountChange: setCyclicalAmount,\n    onCyclicalTypeChange: setCyclicalType,\n    onCyclicalFrequencyChange: setCyclicalFrequency,\n    onCyclicalEligibilityChange: setCyclicalEligibility\n }\n)(Bonus);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, TextInput } from 'grommet';\n\nimport { setNumberWithinRange } from '../functions/setWithinRange';\nimport {\n  setRetirementContribution,\n  setRetirementMatch,\n  setProfitSharingPercent,\n  setStockOptionsPercent\n} from './compensationSlice';\n\nexport const Retirement = ({\n  value: retirement,\n  onRetirementContributionChange,\n  onRetirementMatchChange,\n  onProfitSharingPercentChange,\n  onStockOptionsPercentChange\n}) => {\n  const handleContributonChange = ( event ) => {\n    setNumberWithinRange(\n      0,\n      10E7,\n      event.target.value,\n      onRetirementContributionChange\n    );\n  };\n\n  const handleMatchChange = ( event ) => {\n    setNumberWithinRange(\n      0,\n      10E7,\n      event.target.value,\n      onRetirementMatchChange\n    );\n  };\n\n  const handleProfitSharingChange = ( event ) => {\n    setNumberWithinRange(\n      0,\n      100,\n      event.target.value,\n      onProfitSharingPercentChange\n    );\n  };\n\n  const handleStockOptionsChange = ( event ) => {\n    setNumberWithinRange(0, 100, event.target.value, onStockOptionsPercentChange );\n  };\n\n  return [\n    <Box\n      key='401k'\n      direction='row'\n      align='end'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <FormField\n        label='Employer Contribution ($)'\n        name='retirementContribution'\n      >\n        <TextInput\n          type='number'\n          name='retirementContribution'\n          value={ retirement.contribution }\n          onChange={ handleContributonChange }\n        />\n      </FormField>\n      <FormField\n        label='Employer Match ($)'\n        name='retirementMatch'\n      >\n        <TextInput\n          type='number'\n          name='retirementMatch'\n          value={ retirement.match }\n          onChange={ handleMatchChange }\n        />\n      </FormField>\n    </Box>\n  ,\n    <Box\n      key='stock'\n      direction='row'\n      align='end'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <FormField\n        label='Profit Sharing (%)'\n        name='profitSharing'\n      >\n        <TextInput\n          type='number'\n          name='profitSharing'\n          value={ retirement.profitSharingPercent }\n          onChange={ handleProfitSharingChange }\n        />\n      </FormField>\n      <FormField\n        label='Stock Options (%)'\n        name='stockOptions'\n      >\n        <TextInput\n          type='number'\n          name='stockOptions'\n          value={ retirement.stockOptionsPercent }\n          onChange={ handleStockOptionsChange }\n        />\n      </FormField>\n    </Box>\n  ];\n};\n\nRetirement.propTypes = {\n  value: PropTypes.object.isRequired,\n  onRetirementContributionChange: PropTypes.func.isRequired,\n  onRetirementMatchChange: PropTypes.func.isRequired,\n  onProfitSharingPercentChange: PropTypes.func.isRequired,\n  onStockOptionsPercentChange: PropTypes.func.isRequired\n};\n\nexport const RetirementStateful = connect(\n  state => ({ value: state.compensation.retirement }),\n  {\n    onRetirementContributionChange: setRetirementContribution,\n    onRetirementMatchChange: setRetirementMatch,\n    onProfitSharingPercentChange: setProfitSharingPercent,\n    onStockOptionsPercentChange: setStockOptionsPercent\n  }\n)(Retirement);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, TextInput, Select } from 'grommet';\n\nimport { setIntegerWithinRange } from '../functions/setWithinRange';\nimport { setVesting } from './compensationSlice';\n\nconst allowCustom = false; // Only use simple vesting schedule EG 'even'\n\nexport const Vesting = ({ value: vesting, onChange }) => {\n  // TODO:\n  //   Show years and vesting % on 'other'\n\n  const vestingTypes = [{\n    name: 'Evenly',\n    value: 'evenly'\n  }, {\n    name: 'Other (specify)',\n    value: 'other'\n  }];\n\n  const setSchedule = ( type, years ) => {\n    const schedule = [];\n    if ( type === 'evenly' ) {\n      const amount = 100 / years;\n      for ( let i = 0; i < years; ++ i ) {\n        schedule.push( amount * (i + 1) );\n      }\n    }\n    onChange({\n      type,\n      years,\n      schedule\n    });\n  }\n\n  const handleTypeChange = ( type ) => {\n    setSchedule( type, vesting.years );\n  }\n\n  const handleYearChange = ( years ) => {\n    setIntegerWithinRange(\n      0,\n      100,\n      years,\n      y => setSchedule( vesting.type, y)\n    );\n  }\n  return (\n    <Box\n      direction='row'\n      align='end'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <FormField\n        label='Vesting Years'\n        name='vestingYears'\n      >\n        <TextInput\n          type='number'\n          name='vestingYears'\n          value={ vesting.years }\n          onChange={ event => handleYearChange(event.target.value) }\n        />\n      </FormField>\n      {\n        allowCustom ?\n          <FormField\n            label='Vesting Schedule'\n            name='vestingType'\n          >\n            <Select\n              name='vestingType'\n              options={ vestingTypes }\n              key='value'\n              labelKey='name'\n              valueKey='value'\n              value={ vestingTypes.find( v => v.value === vesting.type ) }\n              onChange={ ({option}) => handleTypeChange(option.value) }\n            />\n          </FormField>\n        : undefined\n      }\n      </Box>\n  );\n};\n\nVesting.propTypes = {\n  value: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const VestingStateful = connect(\n  state => ({ value: state.compensation.vesting }),\n  {\n    onChange: setVesting\n  }\n)(Vesting);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, TextInput, Heading } from 'grommet';\n\nimport { setInsurance } from './compensationSlice';\n\nexport const Insurance = ({ value: insurance, onChange }) => {\n  const setInsurance = i => onChange ? onChange(i) : undefined;\n\n  const updateInsurance = ( type, update ) => {\n    const index = insurance.findIndex( i => i.type === type );\n\n    update = {\n      ...insurance[ index ],\n      ...update\n    };\n\n    const newInsurance = [ ...insurance ];\n    newInsurance.splice(\n      index, 1, update\n    );\n    setInsurance( newInsurance );\n  }\n\n  return (\n    <Box>\n      { insurance.map( ({ type, yours, theirs })=> (\n        <Box\n          key={ type }\n          direction='row'\n          align='center'\n          gap='medium'\n          animation='fadeIn'\n        >\n          <Box\n            width='small'\n          >\n            <Heading\n              level='4'\n            >\n              { type } Insurance\n            </Heading>\n          </Box>\n          <FormField\n            label='Your Contribution'\n            name='yours'\n          >\n            <TextInput\n              type='number'\n              name='yours'\n              value={ yours }\n              onChange={\n                event => updateInsurance(type, { yours: event.target.value })\n              }\n            />\n          </FormField>\n          <FormField\n            label='Employer Contribution'\n            name='theirs'\n          >\n            <TextInput\n              type='number'\n              name='theirs'\n              value={ theirs }\n              onChange={\n                event => updateInsurance(type, { theirs: event.target.value })\n              }\n            />\n          </FormField>\n        </Box>\n      )) }\n    </Box>\n  );\n};\n\nInsurance.propTypes = {\n  value: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const InsuranceStateful = connect(\n  state => ({ value: state.compensation.insurance }),\n  {\n    onChange: setInsurance\n  }\n)(Insurance);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, Heading, TextInput } from 'grommet';\n\nimport { setSavingsAccounts } from './compensationSlice';\n\nexport const HealthSavingsAccounts = ({\n  value: { hsa, fsa },\n  onChange\n}) => {\n  return (\n    <Box\n      direction='row'\n      align='center'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <Box\n        width='small'\n      >\n        <Heading\n          level='4'\n        >\n          HSA / FSA\n        </Heading>\n      </Box>\n      <FormField\n        label='Employer HSA Contribuiton'\n        name='hsa'\n      >\n        <TextInput\n          type='number'\n          name='hsa'\n          value={ hsa }\n          onChange={\n            e => onChange ? onChange({ hsa: e.target.value, fsa }) : undefined\n          }\n        />\n      </FormField>\n      <FormField\n        label='Employer FSA Contribution'\n        name='fsa'\n      >\n        <TextInput\n          type='number'\n          name='fsa'\n          value={ fsa }\n          onChange={\n            e => onChange ? onChange({ fsa: e.target.value, hsa }) : undefined\n          }\n        />\n      </FormField>\n    </Box>\n  );\n};\n\nHealthSavingsAccounts.propTypes = {\n  value: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const HealthSavingsAccountsStateful = connect(\n  state => ({ value: state.compensation.savingsAccounts }),\n  {\n    onChange: setSavingsAccounts\n  }\n)(HealthSavingsAccounts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, TextInput, Button } from 'grommet';\nimport { FormAdd, FormTrash } from 'grommet-icons';\n\nimport { setFringeBenefits } from './compensationSlice';\n\nconst newItem = () => {\n  return {\n    type: '',\n    amount: '',\n    key: Date.now()\n  }\n};\n\nexport const FringeBenefits = ({ value: list, onChange }) => {\n  const setList = l => onChange ? onChange(l) : undefined;\n\n  const remove = i => {\n    if ( list.length === 1 ) {\n      setList([ newItem() ]);\n      return;\n    }\n\n    const newList = [ ...list ];\n    newList.splice( i, 1 );\n    setList( newList );\n  };\n\n  const updateItem = ( i, update ) => {\n    const newList = [ ...list ];\n    newList[i] = { ...newList[i], ...update };\n    setList( newList );\n  };\n\n  return (\n    <Box\n      pad={{\n        horizontal: 'small',\n        bottom: 'small'\n      }}\n    >\n      { list.map( ({ key, type, amount }, i) => (\n        <Box\n          key={ key }\n          direction='row'\n          align='center'\n          gap='medium'\n          animation='fadeIn'\n        >\n          <FormField\n            label='Type'\n            name='type'\n            width='small'\n          >\n            <TextInput\n              type='text'\n              name='type'\n              value={ type }\n              onChange={\n                event => updateItem( i, { type: event.target.value } )\n              }\n          />\n          </FormField>\n          <FormField\n            label='Monthly Amount'\n            name='amount'\n            width='small'\n          >\n            <TextInput\n              type='number'\n              name='amount'\n              value={ amount }\n              onChange={\n                event => updateItem( i, { amount: event.target.value } )\n              }\n            />\n          </FormField>\n          <Button\n            icon={ <FormTrash color='status-error' /> }\n            onClick={ () => remove(i) }\n          />\n        </Box>\n      ) ) }\n      <Box\n        align='end'\n      >\n        <Button\n          icon={ <FormAdd color='brand' /> }\n          onClick={ () => setList([ ...list, newItem() ]) }\n        />\n      </Box>\n    </Box>\n  );\n};\n\nFringeBenefits.propTypes  = {\n  value: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const FringeBenefitsStateful = connect(\n  state => ({ value: state.compensation.fringeBenefits }),\n  {\n    onChange: setFringeBenefits\n  }\n)(FringeBenefits);\n","// Reworked from\n// https://storybook.grommet.io/?path=/story/select--create-option\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'grommet';\n\n// the prefix name of the Create option entry\nconst prefix = 'Create';\n\n// improving Search support of special characters\nconst getRegExp = text => {\n  // The line below escapes regular expression special characters:\n  // [ \\ ^ $ . | ? * + ( )\n  const escapedText = text.replace( /[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&' );\n\n  // Create the regular expression with modified value which\n  // handles escaping special characters. Without escaping special\n  // characters, errors will appear in the console\n  return new RegExp( escapedText, 'i' );\n};\n\nexport const SelectWithSearch = ( props ) => {\n  const [options, setOptions] = useState( props.options || [] );\n  const [value, setValue] = useState( props.value || '' );\n  const [searchValue, setSearchValue] = useState( '' );\n  const [searchRegEx, setSearchRegEx] = useState( '' );\n\n  // TODO: this will have a bug if the created option is 'Create'\n  const updateCreateOption = text => {\n    const len = options.length;\n    let newOptions = options;\n\n    if ( len && options[len - 1].startsWith( prefix ) ) {\n      // remove Create option before adding an updated one\n      newOptions = options.slice( 0, -1 );\n    }\n\n    if ( text ) {\n      setOptions([ ...newOptions, `${prefix} '${text}'` ]);\n    } else {\n      setOptions( newOptions );\n    }\n  };\n\n  return (\n    <Select\n      size='medium'\n      placeholder={ props.placeholder }\n      plain={ true }\n      value={ value }\n      options={\n        searchRegEx ? options.filter( o => searchRegEx.test(o) ) : options\n      }\n      onChange={({ option }) => {\n        let selection = option;\n        if (option.includes(prefix)) {\n          selection = searchValue.trim();\n          setOptions([ ...options.slice(0, -1), selection ]);\n        }\n\n        setValue( selection );\n        if ( props.onChange ) {\n          props.onChange( selection );\n        }\n      }}\n      onClose={ () => {\n        setSearchValue( '' );\n        setSearchRegEx( '' );\n      } }\n      onSearch={ text => {\n        updateCreateOption( text );\n        setSearchRegEx( getRegExp(text) );\n        setSearchValue( text );\n      }}\n    />\n  );\n};\n\nSelectWithSearch.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, Button, FormField, TextInput } from 'grommet';\nimport { FormAdd, FormTrash } from 'grommet-icons';\n\nimport { SelectWithSearch } from '../SelectWithSearch';\nimport { setSupplimentalInsurance } from './compensationSlice';\n\nconst supplimentalTypes = [\n  'Long-Term Disability',\n  'Supplemental Long-Term Disability',\n  'Long-Term Care',\n  'Supplemental Life Insurance',\n  'Spouse Life Insurance',\n  'Dependent Life Insurance',\n  'Supplemental Accidental Death and Dismemberment',\n  'Group Legal',\n  'Pet Insurance',\n  'Critical Illness',\n  'Critical Accident'\n];\n\nconst newItem = () => {\n  return {\n    type: '',\n    yours: '',\n    theirs: '',\n    key: Date.now()\n  }\n}\n\nexport const SupplimentalInsurance = ({ value: list, onChange }) => {\n  const setList = l => onChange ? onChange(l) : undefined;\n\n  const remove = i => {\n    if ( list.length === 1 ) {\n      setList([ newItem() ]);\n      return;\n    }\n\n    const newList = [ ...list ];\n    newList.splice( i, 1 );\n    setList( newList );\n  };\n\n  const updateItem = ( i, update ) => {\n    const newList = [ ...list ];\n    newList[i] = { ...newList[i], ...update };\n    setList( newList );\n  }\n\n  return (\n    <Box\n      pad={{ horizontal: 'small', bottom: 'small' }}\n    >\n      { list.map( (item, i) => (\n        <Box\n          flex={ false }\n          direction='row'\n          align='end'\n          gap='medium'\n          animation='fadeIn'\n          key={ item.key }\n        >\n          <FormField\n            name='type'\n          >\n            <SelectWithSearch\n              name='type'\n              placeholder='Select Insurance'\n              options={ supplimentalTypes }\n              value={ item.type }\n              onChange={ option => updateItem( i, { type: option } ) }\n            />\n          </FormField>\n          <FormField\n            label='Your Contribution'\n            name='yours'\n          >\n            <TextInput\n              type='number'\n              name='yours'\n              value={ item.yours }\n              onChange={\n                event => updateItem( i, { yours: event.target.value } )\n              }\n            />\n          </FormField>\n          <FormField\n            label='Employer Contribution'\n            name='theirs'\n          >\n            <TextInput\n              type='number'\n              name='theirs'\n              value={ item.theirs }\n              onChange={\n                event => updateItem( i, { theirs: event.target.value } )\n              }\n            />\n          </FormField>\n          <Button\n            icon={ <FormTrash color='status-error' /> }\n            onClick={ () => remove(i) }\n          />\n        </Box>\n      )) }\n      <Box\n        animation='fadeIn'\n        align='end'\n        key='button'\n      >\n        <Button\n          icon={ <FormAdd color='brand' /> }\n          onClick={ () => setList([ ...list, newItem() ]) }\n        />\n      </Box>\n    </Box>\n  );\n};\n\nSupplimentalInsurance.propTypes = {\n  value: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const SupplimentalInsuranceStateful = connect(\n  state => ({ value: state.compensation.supplimentalInsurance }),\n  {\n    onChange: setSupplimentalInsurance\n  }\n)(SupplimentalInsurance);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Calendar, DropButton, Text } from 'grommet';\nimport { FormDown } from 'grommet-icons';\nimport moment from 'moment';\n\nexport const CalendarDropButton = ({ innerAlignment, onChange, value }) => {\n  // TODO: value is not set correctly, but this works for my use case\n  //       useEffect instead...\n  const [date, setDate] = React.useState( value );\n  const [open, setOpen] = React.useState();\n\n  const onSelect = selectedDate => {\n    const date = moment(selectedDate);\n    setDate( date );\n\n    if ( onChange ) {\n      onChange( date );\n    }\n\n    setOpen( false );\n  };\n\n  return (\n      <Box\n        border={{ color: 'transparent', size: '2px'}}\n      >\n        <DropButton\n          open={ open }\n          onClose={ () => setOpen( false ) }\n          onOpen={ () => setOpen( true ) }\n          dropContent={\n            <Calendar\n              date={\n                date\n                  ? date.format()\n                  : moment().startOf('day').format()\n              }\n              onSelect={ onSelect }\n            />\n          }\n        >\n          <Box\n            direction='row'\n            gap='medium'\n            align='center'\n            pad={ innerAlignment || {\n              top: '10px',\n              bottom: '9px',\n              left: '11px',\n              right: '11px'\n            }}\n            justify='between'\n          >\n            <Text\n              weight='bold'\n            >\n              { date ? date.format('ll') : 'Select date' }\n            </Text>\n            <FormDown\n              color='text'\n            />\n          </Box>\n        </DropButton>\n      </Box>\n  );\n};\n\nCalendarDropButton.propTypes = {\n  innerAlignment: PropTypes.any,\n  onChange: PropTypes.func,\n  value: PropTypes.object\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, FormField, TextInput } from 'grommet';\nimport moment from 'moment';\n\nimport { CalendarDropButton } from '../CalendarDropButton';\nimport { setCompanyName, setPositionTitle, setStartDate } from './compensationSlice';\n\nexport const WhoWhatWhen = ({\n  value: opportunity,\n  onCompanyChange,\n  onPositionChange,\n  onStartDateChange\n}) => {\n  const { company, position, startDate } = opportunity;\n\n  return (\n    <Box\n      direction='row'\n      align='end'\n      gap='medium'\n      animation='fadeIn'\n    >\n      <FormField\n        label='Company'\n        name='company'\n      >\n        <TextInput\n          name='company'\n          value={ company }\n          onChange={ event => onCompanyChange(event.target.value) }\n        />\n      </FormField>\n      <FormField\n        label='Position / Title'\n        name='position'\n        width='small'\n      >\n        <TextInput\n          name='position'\n          value={ position }\n          onChange={ event => onPositionChange(event.target.value) }\n        />\n      </FormField>\n      <FormField\n        label='Estimated Start Date'\n      >\n        <CalendarDropButton\n          value={ startDate ? moment(startDate) : undefined }\n          onChange={ startDate => onStartDateChange(startDate.format()) }\n        />\n      </FormField>\n    </Box>\n  );\n};\n\nWhoWhatWhen.propTypes = {\n  value: PropTypes.object.isRequired,\n  onCompanyChange: PropTypes.func.isRequired,\n  onPositionChange: PropTypes.func.isRequired,\n  onStartDateChange: PropTypes.func.isRequired\n};\n\nexport const WhoWhatWhenStateful = connect(\n  state => ({ value: state.compensation.opportunity }),\n  {\n    onCompanyChange: setCompanyName,\n    onPositionChange: setPositionTitle,\n    onStartDateChange: setStartDate\n  }\n)(WhoWhatWhen);\n","import React from 'react';\nimport { Box } from 'grommet';\nimport {\n  Aed,\n  Currency,\n  IceCream,\n  LineChart,\n  Money,\n  Train,\n  Trigger\n} from 'grommet-icons';\n\nimport { BaseWageStateful } from './BaseWage';\nimport { HolidaysStateful } from './Holidays';\nimport { PaidTimeOffStateful } from './PaidTimeOff';\nimport { BonusStateful } from './Bonus';\nimport { RetirementStateful } from './Retirement';\nimport { VestingStateful } from './Vesting';\nimport { InsuranceStateful } from './Insurance';\nimport { HealthSavingsAccountsStateful } from './HealthSavingsAccounts';\nimport { FringeBenefitsStateful } from './FringeBenefits';\nimport { SupplimentalInsuranceStateful } from './SupplimentalInsurance';\nimport { WhoWhatWhenStateful } from './WhoWhatWhen';\n\nexport const compensationForm = [{\n  title: 'Basics',\n  icon: <Currency />,\n  content: <>\n    <WhoWhatWhenStateful />\n    <BaseWageStateful />\n  </>\n}, {\n  title: 'Paid Time Off',\n  icon: <IceCream />,\n  content: <>\n    <HolidaysStateful />\n    <PaidTimeOffStateful />\n  </>\n}, {\n  title: 'Bonus',\n  icon: <Money />,\n  content: <>\n    <BonusStateful />\n  </>\n}, {\n  title: 'Retirement',\n  icon: <LineChart />,\n  content: <>\n    <RetirementStateful />\n    <VestingStateful />\n  </>\n}, {\n  title: 'Insurance',\n  icon: <Aed />,\n  content: <>\n    <InsuranceStateful />\n    <Box height='xxsmall' />\n    <HealthSavingsAccountsStateful />\n  </>\n}, {\n  title: 'Supplimental',\n  icon: <Trigger />,\n  content: <>\n    <SupplimentalInsuranceStateful />\n  </>\n}, {\n  title: 'Fringe Benefits',\n  icon: <Train />,\n  content: <>\n    <FringeBenefitsStateful />\n  </>\n}];\n","import React from 'react';\nimport { Box, Button, Heading, Tabs, Tab } from 'grommet';\nimport { FormPrevious, FormNext, Checkmark } from 'grommet-icons';\nimport { Link } from 'react-router-dom';\n\nimport { HoverIcon } from '../HoverIcon';\nimport { TotalCompensationStateful } from './TotalCompensation/TotalCompensation';\nimport { compensationForm } from './compensationForm';\n\nexport const CompensationCalc = ({ onSave }) => {\n  const [index, setIndex] = React.useState(0);\n\n  return (\n  <Box\n    direction='row'\n    align='center'\n    justify='center'\n  >\n    <Box\n      align='center'\n      justify='center'\n      width='58vw; min-width: 58vw;'\n      border='right'\n    >\n      <Tabs activeIndex={ index } onActive={ i => setIndex(i) }>\n        { compensationForm.map( ({ title, icon, content }, i) => (\n            <Tab\n              key={ title }\n              title={\n                <HoverIcon\n                  icon={ icon }\n                  active={ index === i }\n                />\n              }\n            >\n              <Box\n                flex={false}\n                align='center'\n                justify='center'\n                margin={{ vertical: 'medium' }}\n              >\n                <Heading\n                  level='2'\n                  margin={{ top: '0' }}\n                >\n                  { title }\n                </Heading>\n                <Box\n                  flex={false}\n                  height={{ max: '65vh' }}\n                  overflow={{ vertical: 'auto' }}\n                >\n                  { content }\n                </Box>\n                <Box\n                  flex={false}\n                  direction='row'\n                  gap='medium'\n                  align='center'\n                  margin={{ top: 'medium' }}\n                >\n                  <Button\n                    color='brand'\n                    label='Prev'\n                    icon={ <FormPrevious /> }\n                    onClick={ () => setIndex(index - 1) }\n                    disabled={ index === 0 }\n                  />\n                  <Link to='/' onClick={ () => onSave() } >\n                    <HoverIcon icon={ <Checkmark /> } />\n                  </Link>\n                  <Button\n                    color='brand'\n                    label='Next'\n                    icon={ <FormNext /> }\n                    reverse={ true }\n                    onClick={ () => setIndex(index + 1) }\n                    disabled={ index === compensationForm.length - 1 }\n                  />\n                </Box>\n              </Box>\n            </Tab>\n          ))\n        }\n      </Tabs>\n    </Box>\n    <Box\n      width='42vw'\n      gap='medium'\n      pad='small'\n      direction='column'\n      align='center'\n    >\n      <TotalCompensationStateful />\n    </Box>\n  </Box>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst jobsSlice = createSlice({\n  name: 'jobs',\n  initialState: [],\n  reducers: {\n    addJob: {\n      reducer( state, action ) {\n        return state = [ action.payload, ...state ];\n      }\n    },\n    deleteJob: {\n      reducer( state, action ) {\n        const i = state.findIndex( ({ id }) => id === action.payload.id );\n        if ( i === -1 ) return state; // Couldn't find the ID, bail\n\n        const newState = [ ...state ];\n        newState.splice( i, 1 );\n        return newState;\n      }\n    },\n    loadJobs: (state, action) => action.payload,\n    saveJob: {\n      reducer( state, action ) {\n        const i = state.findIndex( ({ id }) => id === action.payload.id );\n        if ( i === -1 ) return [ action.payload, ...state ]; // Couldn't find the ID, just save the thing\n\n        const newState = [ ...state ];\n        newState.splice( i, 1 );\n        return [ action.payload, ...newState ];\n      }\n    }\n  }\n});\n\nexport const findJob = ( id, state ) => state.find( ({ id: _id }) => id === _id );\n\nexport const {\n  addJob,\n  deleteJob,\n  loadJobs,\n  saveJob\n} = jobsSlice.actions;\n\nexport default jobsSlice.reducer;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { findJob, saveJob } from '../reducers/jobSlice';\nimport { CompensationCalc } from './CompensationCalc';\nimport { loadCompensation } from './compensationSlice';\n\nconst Edit = ({ compensation, jobs, loadCompensation, saveJob }) => {\n  const { id } = useParams();\n\n  useEffect(() => {\n    const job = findJob( id, jobs );\n    loadCompensation(job);\n  }, [ id, jobs, loadCompensation ]);\n\n  return <CompensationCalc onSave={ () => saveJob(compensation) } />\n}\n\nexport const EditCompensation = connect(\n  ({ compensation, jobs }) => ({ compensation, jobs }),\n  {\n    loadCompensation,\n    saveJob\n  }\n)(Edit);\n","import React from 'react';\nimport { Box, Button, Heading, List, Text } from 'grommet';\nimport { Add } from 'grommet-icons';\n\nexport const EditableList = (props) => {\n  return (\n    <Box\n      flex\n      align='center'\n      justify='center'\n      animation={['zoomOut', 'fadeIn']}\n    >\n      <Box align='center'>\n        <Heading level='3'>{props.data.title}</Heading>\n        <List\n          data={props.data.list}\n          primaryKey={ item => (\n            <Text size='large' weight='bold'>\n              {item.company}\n            </Text>\n          )}\n          secondaryKey={ item => (\n            <Text size='small' color='dark-4'>\n              {item.date}\n            </Text>\n          )}\n        />\n        <Box\n          alignSelf='end'\n          direction='row'\n          gap='medium'\n          margin='small'\n        >\n          <Button\n            color='brand'\n            label={ <Add></Add> }\n            onClick={ props.toggleSidebar }\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}","export const submitted = {\n  type: 'submitted',\n  title: 'Recruited Submitted',\n  list: [{\n    company: 'Raymond James',\n    date: '2020-03-31'\n  }, {\n    company: 'State Of Colorado',\n    date: '2020-04-01',\n    compensation: {\n      hourly: 72\n    },\n    recuriter: {\n      name: 'Jerry Eberly',\n      email: 'jeberly@vincentbenjamin.com'\n    }\n  }, {\n    company: 'Century Link',\n    date: '2020-04-03'\n  }, {\n    company: 'Starz',\n    date: '2020-04-06',\n    compensation: {\n      hourly: 80\n    },\n    recruiter: {\n      name: 'Chris Kawano',\n      email: 'ckawano@apexsystems.com'\n    }\n  }]\n};","export const applied = {\n  type: 'applied',\n  title: 'Applied',\n  list: [{\n    company: 'Google',\n    date: '2020-04-03',\n    jobTitle: 'Andriod Software Engineer'\n  }, {\n    company: 'Xylem',\n    date: '2020-04-06',\n    jobTitle: 'Lead Software Engineer'\n  }, {\n    company: 'Interactive Resources',\n    date: '2020-04-06',\n    jobTitle: 'Lead Javascript Engineer',\n    inactive: {\n      reason: 'Contract for Charter'\n    }\n  }, {\n    company: 'Google',\n    date: '2020-04-09',\n    jobTitle: 'Software Engineer'\n  }, {\n    company: 'Google',\n    date: '2020-04-09',\n    jobTitle: 'Core FE Software Engineer'\n  }]\n};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Heading } from 'grommet';\nimport { Layer, Trash } from 'grommet-icons';\n\nimport { GrommetTheme } from './GrommetTheme';\nimport { HoverIcon } from './HoverIcon';\n\nexport const JobLink = ({ name, to, total, onDelete, onCompare }) => {\n  const [hover, setHover] = useState(false);\n\n  const activeColor = GrommetTheme.tab.active.color;\n  const inactiveColor = GrommetTheme.tab.color;\n\n  return (\n    <Box\n      onMouseEnter={ () => setHover(true) }\n      onMouseLeave={ () => setHover(false) }\n      pad='small'\n    >\n      <Link\n        to={ to }\n        style={{ textDecoration: 'none' }}\n      >\n        <Box\n          direction='column'\n          align='center'\n          pad={{ bottom: 'small' }}\n        >\n          <Heading\n            level={ 1 }\n            color={ hover ? activeColor : inactiveColor }\n            margin='none'\n          >\n            {\n              // TODO: support K and M\n              Math.round( total / 1000 ) + 'k'\n            }\n          </Heading>\n          <Heading\n            level={ 3 }\n            color={ hover ? activeColor : inactiveColor }\n            margin='none'\n          >\n            { name }\n          </Heading>\n        </Box>\n      </Link>\n      <Box\n        fill\n        direction='row'\n        justify='between'\n      >\n        <HoverIcon\n          icon={ <Layer /> }\n          style={ hover ?\n            { cursor: 'pointer', transform: 'rotate(-45deg)' }\n            : { visibility: 'hidden' }\n          }\n          onClick={ () => onCompare ? onCompare() : void(0) }\n        />\n        <HoverIcon\n          icon={ <Trash /> }\n          inactiveColor={ GrommetTheme.global.colors['accent-2'] }\n          style={ hover ? { cursor: 'pointer' } : { visibility: 'hidden' } }\n          onClick={ () => onDelete ? onDelete() : void(0) }\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Box } from 'grommet';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const RankedView = ({ jobs }) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect( () => {\n    const r = [];\n    let columns = [];\n    for( const job of jobs ) {\n      columns.push(job);\n      if ( columns.length > r.length ) {\n        r.push(columns);\n        columns = [];\n      }\n    }\n    if ( columns.length > 0 ) r.push(columns);\n    setRows(r);\n  }, [\n    jobs\n  ] );\n\n  return (\n    <Box\n      direction='column'\n      align='center'\n    >\n      {\n        rows.map( jobs => (\n          <Box\n            direction='row'\n            gap='medium'\n            key={ nanoid() }\n          >\n            {\n              jobs\n            }\n          </Box>\n        ) )\n      }\n    </Box>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport { Box } from 'grommet';\nimport { AddCircle } from 'grommet-icons';\n\nimport { CompensationCalc } from './CompensationCalc/CompensationCalc';\nimport {\n  resetCompensation,\n  selectTotalCompensation\n} from './CompensationCalc/compensationSlice';\nimport { EditCompensation } from './CompensationCalc/EditCompesation';\nimport { EditableList } from './EditableList';\nimport { submitted } from './data/submitted';\nimport { applied } from './data/applied';\nimport { HoverIcon } from './HoverIcon';\nimport { addJob, deleteJob, loadJobs } from './reducers/jobSlice';\nimport { JobLink } from './JobLink';\nimport { RankedView } from './RankedView';\n\nexport const Body = connect(\n  ({ compensation, jobs }) => ({\n    compensation,\n    jobs\n  }),\n  {\n    resetCompensation,\n    addJob,\n    loadJobs,\n    deleteJob\n  }\n)( ({\n  addJob,\n  compensation,\n  deleteJob,\n  jobs,\n  loadJobs,\n  toggleSidebar,\n  resetCompensation\n}) => {\n  const [ jobLinks, setJobLinks ] = useState([]);\n\n  useEffect( () => {\n    const newJob = (\n      <Link\n        to='/new'\n        onClick={ () => resetCompensation() }\n        key='new'\n      >\n        <HoverIcon\n          icon={ <AddCircle size='xlarge' /> }\n        />\n      </Link>\n    );\n\n    const sortedJobs = [...jobs].sort(\n      // Inverse sort, we want biggest number first\n      ( a, b ) => selectTotalCompensation( b ) - selectTotalCompensation( a ) \n    );\n\n    setJobLinks([\n      ...sortedJobs.map( job =>\n        <JobLink\n          total={\n            selectTotalCompensation( job )\n          }\n          to={ `/edit/${ job.id }` }\n          name={\n            job.opportunity.company || job.opportunity.position || '???'\n          }\n          key={ job.id }\n          onDelete={ () => deleteJob( job ) }\n        />\n      ),\n      newJob\n    ]);\n  }, [\n    jobs,\n    deleteJob,\n    resetCompensation\n  ]);\n\n  useEffect( () => {\n    // TODO: extract into its own service\n    const savedJobs = JSON.parse( localStorage.getItem( 'jobs' ) );\n    if ( savedJobs && savedJobs.length ) loadJobs( savedJobs );\n    localStorage.setItem( 'version', '0.1.0' );\n  }, [] ) /* eslint-disable-line react-hooks/exhaustive-deps */\n\n  // TODO: we do re-write the contents back into localStorage on load\n  useEffect( () => {\n    localStorage.setItem('jobs', JSON.stringify(jobs))\n  }, [ jobs ])\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/new'>\n          <CompensationCalc onSave={ () => addJob(compensation) } />\n        </Route>\n        <Route path='/edit/:id'>\n          <EditCompensation />\n        </Route>\n        <Route path='/applied'>\n          <EditableList\n            data={ submitted }\n            toggleSidebar={ toggleSidebar }\n          />\n          <EditableList\n            data={ applied }\n            toggleSidebar={ toggleSidebar }\n          />\n        </Route>\n        <Route path='/'>\n          <Box\n            justify='center'\n          >\n            <RankedView jobs={ jobLinks } />\n          </Box>\n        </Route>\n      </Switch>\n    </Router>\n  );\n});\n","import React from 'react';\n\nimport { Collapsible, Box, Button, Layer, ResponsiveContext } from 'grommet';\nimport { FormClose } from 'grommet-icons';\n\nexport const SideBar = (props) => (\n  <ResponsiveContext.Consumer>\n    { size => (\n      size !== 'small' ? (\n        <Collapsible direction='horizontal' open={props.open}>\n          <Box\n            flex\n            width='medium'\n            background='brand40'\n            elevation='small'\n            align='center'\n            justify='center'\n          >\n            {props.children}\n          </Box>\n        </Collapsible>\n      ) : props.open && (\n        <Layer>\n          <Box\n            background='brand'\n            tag='header'\n            justify='end'\n            align='center'\n            direction='row'\n          >\n            <Button\n              icon={<FormClose />}\n              onClick={props.toggleSidebar}\n            />\n          </Box>\n          <Box\n            fill\n            background='brand40'\n            align='center'\n            justify='center'\n          >\n            {props.children}\n          </Box>\n        </Layer>\n      )\n    )}\n  </ResponsiveContext.Consumer>\n);","import React, { useState } from 'react';\nimport { Box, Grommet } from 'grommet';\n\nimport { AppBar } from './AppBar';\nimport { Body } from './Body';\nimport { SideBar } from './SideBar';\nimport { GrommetTheme } from './GrommetTheme';\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  const toggleSidebar = () => setShowSidebar(!showSidebar);\n\n  return (\n    <React.StrictMode>\n      <Grommet theme={GrommetTheme} full>\n        <Box\n          fill\n          background={{\n            image: 'url(\"/background-tile.png\")',\n            dark: true,\n            repeat: 'repeat',\n            size: 'auto'\n          }}\n        >\n          <AppBar flex={false}/>\n          <Box\n            direction='row'\n            flex\n            justify='center'\n            overflow={{ horizontal: 'hidden' }}\n          >\n            <Body toggleSidebar={toggleSidebar}/>\n            <SideBar open={showSidebar} toggleSidebar={toggleSidebar}>\n              Edit form goes here\n            </SideBar>\n          </Box>\n        </Box>\n      </Grommet>\n  </React.StrictMode>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport compensationSlice from '../CompensationCalc/compensationSlice';\nimport jobsSlice from './jobSlice';\n\nexport default combineReducers({\n  compensation: compensationSlice, // TODO: rename\n  jobs: jobsSlice\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport rootReducer from './reducers';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore({\n  reducer: rootReducer\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}